/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._apess;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import common.*;
import dbconn.*;

public class _invoice_0issue_0save__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;


  //-------------------------------------------
  // CopyRightLogo
  //
  //-------------------------------------------
  String CopyRightLogo()
  {
    String str;
    str = "<table width='99%' border='0' cellspacing='0' cellpadding='0' align='center'>";
    str += "<tr><td width='100%' height='2' align='center'>";
    str += "<HR width=100% size=2></td></tr>";
    str += "<tr><td width='100%' align='center'>";
    str += "<FONT size=2 >&copy;Copyright 2010 </font>";
    str += "<FONT size=2 color=green>Fast Future Brands Pty Ltd. All Rights Reserved.</FONT><BR>";
    str += "<FONT size=2> For more information,please contact</font> <FONT size=2 color=blue><A href='mailto:scm@ffb.net.au'>scm@ffb.net.au</A></FONT>";
    str += "</td></tr></table>";

    return (String)str;
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String _apessid = "";
String _apessname = "";
String usertype = "";
String usergroup = "";
String scmid = "";
String scmnm = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";

try {
  _apessid = (String) session.getAttribute("apessid");
  _adminid = (String) session.getAttribute("adminid");

  if( (_apessid == null || _apessid.length() == 0 || _apessid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/apess/login_first.html");
    return;
  }

  _apessname = (String) session.getAttribute("apessname");
  _adminname = (String) session.getAttribute("adminname");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  scmid = (String) session.getAttribute("scmid");
  scmnm = (String) session.getAttribute("scmnm");
  //scmsubids = (String) session.getAttribute("scmsubids");

} catch( Exception e ) {
  response.sendRedirect("/apess/login_first.html");
  return;
}

      out.write('\n');
      
// Intranet DB
String _mysqlJdbcDriver = "com.mysql.jdbc.Driver";
String _urlLogin = "jdbc:mysql://10.2.1.247:3306/intranet";
String _userLogin = "intranet";
String _pwLogin = "tetris82";

// Futura DB
String _mssqlJdbcDriver = "com.microsoft.jdbc.sqlserver.SQLServerDriver";
String _urlFutura = "jdbc:microsoft:sqlserver://10.2.1.228:1433";
String _userFutura = "intranet";
String _pwFutura = "tetris";

// Uplod
String _uploadPath = "/var/tmp";
long _maxFileSize = 10*1024*1024;

// style image path
String _styleImgURL = "/image";

// Fault return invoice File URL
String _faultReturnInvoiceFileURL = "/image/Return";

// Memo \u00b0\u00fc\u00b7\u00c3 \u00ba\u00af\u00bc\u00f6
String _memoDataUrl = "/memo/upload";

// APESS SCM ID
String _apessID = "60171";

// Spec Sheet path
String _specSheetUrl = "/image/SPEC_SHEET";

// Spec Sheet upload path
String _specSheetUploadUrl = "/scan_spec_sheet";

// Sample Image Url
String _sampleIamgeUrl = "/image/SAMPLE_IMAGE";

// barcode file Image Url
String _barcodeFileUrl = "/image/Barcode";

// Invoice file path
String _invoiceFileUrl = "/order/inv_files";

// shipment file path
String _shipmentFileUrl = "/order/shipment_upload";

// Apess MU rate
double _MURate = 0.25;

// Ex-Factory Price Rate
double _EXRate = 0.04;


// Ex-Factory Price Rate for Apess2
double _EXRate2 = 0.04;

// Pronto DATA_AREA
//String _dataArea = "fft";
String _dataArea = "ffl";

// Pronto PIE Info
//String _pieIP = "10.2.1.226";
String _pieIP = "newffbpro.fastfuturebrands.com.au";
int _piePort = 7000;
//String _pieDataset = "apitest";
String _pieDataset = "apilive";

      out.write(_jsp_string1, 0, _jsp_string1.length);
      
String invoice_no = "";
String ag_brand = request.getParameter("ag_brand");
String ag_pono = request.getParameter("ag_pono");
String ag_orderby = request.getParameter("ag_orderby");
String invoice_date = request.getParameter("invoice_date");
String currency = request.getParameter("currency");
String ship_via_01 = request.getParameter("ship_via_01");
String ship_via_02 = request.getParameter("ship_via_02");
String condition = request.getParameter("condition");
String origin = request.getParameter("origin");
String ship_date = request.getParameter("ship_date");
String terms = request.getParameter("terms");
String style_no[] = request.getParameterValues("style_no");
String po_no[] = request.getParameterValues("po_no");
String description[] = request.getParameterValues("description");
String content[] = request.getParameterValues("content");
String category[] = request.getParameterValues("category");
String qty[] = request.getParameterValues("qty");
String box_qty[] = request.getParameterValues("box_qty");
String unit_price[] = request.getParameterValues("unit_price");
String add_cost[] = request.getParameterValues("add_cost");
String disc_price[] = request.getParameterValues("disc_price");
String remarks[] = request.getParameterValues("remarks");
String brand[] = request.getParameterValues("brand");
String remarks2[] = request.getParameterValues("remarks2");

String sql = "";
boolean isSucceeded = false;
String strMsg = "";
Connection conn = null;
ResultSet rs = null;
Statement stmt = null;
PreparedStatement pstmt = null;
DBConnManager dbPool = null;
int iCnt = 0;
String nextUrl = "";

try {

  dbPool = dbconn.DBConnManager.getInstance();
  conn = dbPool.getConnection("intranet");

  String tmp_po_no = "";
  for (int i = 0; i < po_no.length; i++) {
    if (i > 0) tmp_po_no += ",";
    tmp_po_no += "'" + po_no[i] + "'";
  }

  // check poes whether they are already invoiced.
  sql = " select  count(*) "
      + " from    invoice_apess_02t "
      + " where   po_no in (" + tmp_po_no + ") ";

  stmt = conn.createStatement();
  rs = stmt.executeQuery(sql);

  if (rs.next()) {
    iCnt = rs.getInt(1);
  }

  rs.close();

  if (iCnt > 0) {
    throw new UserDefinedException("One of the POs has been already invoiced.\\nCheck your data.");
  }

  // read next invoice no
  String next_seqno = "01";

  sql = " select  nvl(trim(to_char(to_number(substr(max(invoice_no), lengthb(max(invoice_no))-1))+1, '09')), '01') "
      + " from    invoice_apess_01t "
      //+ " where   invoice_date = to_date('" + invoice_date + "', 'dd/mm/yyyy') "
      + " where   ship_date = to_date('" + ship_date + "', 'dd/mm/yyyy') "
      + " and     ship_via_01 = '" + ship_via_01 + "' ";

  rs = stmt.executeQuery(sql);

  if (rs.next()) {
    next_seqno = rs.getString(1);
  }

  rs.close();
  stmt.close();

  //invoice_no = invoice_date.substring(8) + invoice_date.substring(3, 5) + invoice_date.substring(0, 2)
  //              + ship_via_01.substring(0, 1) + next_seqno;
  invoice_no = ship_date.substring(8) + ship_date.substring(3, 5) + ship_date.substring(0, 2)
                + ship_via_01.substring(0, 1) + next_seqno;

  // insert invoice info
  // invoice header
  sql = " insert into invoice_apess_01t "
      + " ( "
      + "   invoice_no, invoice_date, supplier_id, currency, ship_via_01, ship_via_02, "
      + "   condition, origin, ship_date, terms, input_date, input_id, update_date, update_id "
      + " ) "
      + " values "
      + " ( "
      + "   ?, to_date(?, 'dd/mm/yyyy'), ?, ?, ?, ?, ?, ?, to_date(?, 'dd/mm/yyyy'), ?, sysdate, ?, null, null "
      + " ) ";

  int j = 0;
  conn.setAutoCommit(false);
  pstmt = conn.prepareStatement(sql);
  pstmt.setString(++j, invoice_no);
  pstmt.setString(++j, invoice_date);
  pstmt.setString(++j, scmid);
  pstmt.setString(++j, currency);
  pstmt.setString(++j, ship_via_01);
  pstmt.setString(++j, ship_via_02);
  pstmt.setString(++j, condition);
  pstmt.setString(++j, origin);
  pstmt.setString(++j, ship_date);
  pstmt.setString(++j, terms);
  pstmt.setString(++j, _apessid);
  pstmt.executeUpdate();
  pstmt.close();

  // invoice_detail
  sql = " insert into invoice_apess_02t "
      + " ( "
      + "   po_no, style_no, invoice_no, description, content, category, qty, box_qty, unit_price, "
      + "   add_cost, remarks, brand, input_date, input_id, update_date, update_id, remarks2, disc_price "
      + " ) "
      + " values "
      + " ( "
      + "   ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate, ?, null, null, ?, ? "
      + " ) ";

  pstmt = conn.prepareStatement(sql);

  for (int i = 0; i < po_no.length; i++) {
    j = 0;
    pstmt.setString(++j, po_no[i]);
    pstmt.setString(++j, style_no[i]);
    pstmt.setString(++j, invoice_no);
    pstmt.setString(++j, description[i]);
    pstmt.setString(++j, content[i]);
    pstmt.setString(++j, category[i]);
    pstmt.setString(++j, qty[i]);
    pstmt.setString(++j, box_qty[i]);
    pstmt.setString(++j, unit_price[i]);
    pstmt.setString(++j, add_cost[i]);
    pstmt.setString(++j, remarks[i]);
    pstmt.setString(++j, brand[i]);
    pstmt.setString(++j, _apessid);
    pstmt.setString(++j, remarks2[i]);
    pstmt.setString(++j, disc_price[i]);
    pstmt.executeUpdate();
  }

  conn.commit();
  isSucceeded = true;

} catch (UserDefinedException ue) {
  try { conn.rollback(); } catch (Exception ex) {}

  strMsg = ue.getMessage();
} catch (Exception e) {
  try { conn.rollback(); } catch (Exception ex) {}

  System.out.println("Exception invoice_issue_save : " + e.getMessage());
  throw e;
} finally {
  if (rs != null) {
    try { rs.close(); } catch (Exception e) {}
  }

  if (stmt != null) {
    try { stmt.close(); } catch (Exception e) {}
  }

  if (pstmt != null) {
    try { pstmt.close(); } catch (Exception e) {}
  }

  if (conn != null) {
    try { conn.setAutoCommit(true); } catch (Exception e) {}
    dbPool.freeConnection("intranet", conn);
  }
}

// result message
if (isSucceeded) {
  strMsg = "The data are successfully processed.";
  nextUrl = "./invoice_view.jsp";
} else {
  strMsg = "The operation failed.\\n" + strMsg;
  nextUrl = "./invoice_issue_list.jsp";
}

      out.write(_jsp_string2, 0, _jsp_string2.length);
      
if (isSucceeded) {

      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print(( invoice_no ));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
} else {

      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print(( ag_brand ));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print(( ag_pono ));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print(( ag_orderby ));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
}

      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print(( strMsg ));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print(( nextUrl ));
      out.write(_jsp_string10, 0, _jsp_string10.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("apess/invoice_issue_save.jsp"), 2340557900707716812L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("apess/login_check.jsp"), 3743346625025852725L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("common/CommonVars.jsp"), 5055347195946766837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("bottom_line.jsp"), 5941552803368297242L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string10;
  private final static char []_jsp_string3;
  private final static char []_jsp_string9;
  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string1;
  private final static char []_jsp_string8;
  private final static char []_jsp_string6;
  private final static char []_jsp_string5;
  private final static char []_jsp_string4;
  private final static char []_jsp_string7;
  static {
    _jsp_string10 = "';\nform1.submit();\n</script>\n</BODY>\n</HTML>\n".toCharArray();
    _jsp_string3 = "\n<input type='hidden' name='M' value='Y'>\n<input type='hidden' name='invoice_no' value='".toCharArray();
    _jsp_string9 = "\");\nform1.action = '".toCharArray();
    _jsp_string0 = "\n\n\n\n".toCharArray();
    _jsp_string2 = "\n<HTML>\n<head>\n</head>\n<body>\n<form name='form1' method='post'>\n".toCharArray();
    _jsp_string1 = "\n\n\n".toCharArray();
    _jsp_string8 = "\n</form>\n<script language='javascript'>\nalert(\"".toCharArray();
    _jsp_string6 = "'>\n<input type='hidden' name='ag_pono' value='".toCharArray();
    _jsp_string5 = "\n<input type='hidden' name='ag_brand' value='".toCharArray();
    _jsp_string4 = "'>\n".toCharArray();
    _jsp_string7 = "'>\n<input type='hidden' name='ag_orderby' value='".toCharArray();
  }
}
