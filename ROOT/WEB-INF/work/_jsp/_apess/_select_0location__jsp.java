/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._apess;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import dbconn.*;

public class _select_0location__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String _apessid = "";
String _apessname = "";
String usertype = "";
String usergroup = "";
String scmid = "";
String scmnm = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";

try {
  _apessid = (String) session.getAttribute("apessid");
  _adminid = (String) session.getAttribute("adminid");

  if( (_apessid == null || _apessid.length() == 0 || _apessid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/apess/login_first.html");
    return;
  }

  _apessname = (String) session.getAttribute("apessname");
  _adminname = (String) session.getAttribute("adminname");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  scmid = (String) session.getAttribute("scmid");
  scmnm = (String) session.getAttribute("scmnm");
  //scmsubids = (String) session.getAttribute("scmsubids");

} catch( Exception e ) {
  response.sendRedirect("/apess/login_first.html");
  return;
}

      out.write('\n');
      
String selectedUsertype = request.getParameter("selectedUsertype");
if (selectedUsertype == null) selectedUsertype = "";

int iRet = 0;
Connection connScm = null;
MatrixDataSet matrix = null;
DataProcess dataProcess = null;
DBConnManager dbPool = null;
String outS = "";
String sql = "";

try {

  matrix = new dbconn.MatrixDataSet();
  dataProcess = new DataProcess();
  dbPool = dbconn.DBConnManager.getInstance();
  connScm = dbPool.getConnection("intranet");

  if (selectedUsertype.equals("")) {
    // read location list
    sql = " select  code, code_name "
        + " from    vg_common_code "
        + " where   type = 'USER_TYPE' "
        + " and     use_yn = 'Y' "
        + " and     related_code = "
        + "         ( "
        + "           select  related_code "
        + "           from    vg_common_code "
        + "           where   type = 'USER_TYPE' "
        + "           and     code = '" + usertype + "' "
        + "         ) "
        + " and     code <> '" + usertype + "' "
        + " order by sort_order ";

    iRet = dataProcess.RetrieveData(sql, matrix, connScm);

    // if there is just one location, set the location as selected usertype
    if (iRet == 1) {
      selectedUsertype = matrix.getRowData(0).getData(0);
    }
  }

  if (!selectedUsertype.equals("")) {
    // read supplier id and name
    sql = " select  a.supplier_id, b.name "
        + " from    user_supplier_01t a "
        + "         inner join login_01t b "
        + "           on a.supplier_id = b.id "
        + " where   a.user_type = '" + selectedUsertype + "' ";

    iRet = dataProcess.RetrieveData(sql, matrix, connScm);

    if (iRet > 0) {
      int j = 0;
      scmid = matrix.getRowData(0).getData(j++);
      scmnm = matrix.getRowData(0).getData(j++);
    }

    session.putValue("usertype", selectedUsertype);
    session.putValue("scmid", scmid);
    session.putValue("scmnm", scmnm);

    // read password change interval info
    String password = "";
    String admintype = "";
    int pwInterval = 0;

    sql = " select  password, admintype, nvl(ceil(sysdate - pw_date), 91) "
        + " from    admin_01t "
        + " where   adminid = '" + _apessid + "' ";

    iRet = dataProcess.RetrieveData(sql, matrix, connScm);

    if (iRet > 0) {
      int j = 0;
      password = matrix.getRowData(0).getData(j++);
      admintype = matrix.getRowData(0).getData(j++);
      pwInterval = Integer.parseInt(matrix.getRowData(0).getData(j++));

      if (!admintype.equals("H")) {
        if (password.equals("1111") || pwInterval > 90) {
          response.sendRedirect("./resetPasswdForm.jsp");
          return;
        }
      }
    }

    // redirect to main page
    response.sendRedirect("./index2.jsp");
    return;
  }

} catch (Exception e) {
  System.out.println("Exception select_location : " + e.getMessage());
  throw e;
} finally {
  if (connScm != null) {
    dbPool.freeConnection("intranet", connScm);
  }
}

// set location options
for (int i = 0; i < iRet; i++) {
  int j = 0;
  String code = matrix.getRowData(i).getData(j++);
  String codeName = matrix.getRowData(i).getData(j++);

  outS += "<option value='" + code + "'>" + codeName + "</option>";
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.print(( outS ));
      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("apess/select_location.jsp"), 4753776803970749726L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("apess/login_check.jsp"), 3743346625025852725L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  static {
    _jsp_string0 = "\n\n\n".toCharArray();
    _jsp_string1 = "\n<html>\n<head>\n<link href=\"/common/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\">\n<table width=\"840\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr><td>\n\n<table width=\"99%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\n<form name='form1' method='post' action='./select_location.jsp'>\n<tr>\n  <td width=\"100%\" height=\"15\" colspan=\"2\"></td>\n</tr>\n<tr>\n  <td width=\"3%\"><img src=\"/img/title_icon.gif\"></td>\n  <td width=\"*\"><b>Select Location :</b>\n    <select name='selectedUsertype' onchange='this.form.submit();'>\n    <option></option>".toCharArray();
    _jsp_string2 = "\n    </select></td>\n</tr>\n</form>\n</table>\n\n</td></tr></table>\n</body>\n</html>\n".toCharArray();
  }
}
