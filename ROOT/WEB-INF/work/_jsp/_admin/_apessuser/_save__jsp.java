/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._admin._apessuser;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import common.*;
import dbconn.*;

public class _save__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String _apessid = "";
String _apessname = "";
String usertype = "";
String usergroup = "";
String scmid = "";
String scmnm = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";

try {
  _apessid = (String) session.getAttribute("apessid");
  _adminid = (String) session.getAttribute("adminid");

  if( (_apessid == null || _apessid.length() == 0 || _apessid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/apess/login_first.html");
    return;
  }

  _apessname = (String) session.getAttribute("apessname");
  _adminname = (String) session.getAttribute("adminname");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  scmid = (String) session.getAttribute("scmid");
  scmnm = (String) session.getAttribute("scmnm");
  //scmsubids = (String) session.getAttribute("scmsubids");

} catch( Exception e ) {
  response.sendRedirect("/apess/login_first.html");
  return;
}

      out.write('\n');
      
String adminId = request.getParameter("adminId");
String adminName = request.getParameter("adminName").trim();
String password = request.getParameter("password");
String adminType = request.getParameter("adminType");
String adminGroup = request.getParameter("adminGroup");
String brand = request.getParameter("brand");
String emailYn = request.getParameter("emailYn");
String email = request.getParameter("email");
String actionFlag = request.getParameter("actionFlag");

String sql = "";
int iCnt = 0;
boolean isSucceeded = false;
String strMsg = "";
DBConnManager dbPool = null;
Connection conn = null;
PreparedStatement pstmt = null;

try {

  dbPool = DBConnManager.getInstance();
  conn = dbPool.getConnection("intranet");

  // insert/update/delete \u00c3\u00b3\u00b8\u00ae...
  int idx = 1;
  conn.setAutoCommit(false);

  // actionFlag\u00bf\u00a1 \u00b5\u00fb\u00b6\u00f3 \u00c3\u00b3\u00b8\u00ae\u00c7\u00d4.
  if (actionFlag.equals("I")) {

    // insert...
    sql = " insert into admin_01t "
        + " ( "
        + "   adminid, adminname, password, admintype, admingroup, brand, email, email_yn "
        + " ) "
        + " values "
        + " ( "
        + "   ?, ?, ?, ?, ?, ?, ?, ? "
        + " ) ";

    pstmt = conn.prepareStatement(sql);
    pstmt.setString(idx++, adminId);
    pstmt.setString(idx++, adminName);
    pstmt.setString(idx++, password);
    pstmt.setString(idx++, adminType);
    pstmt.setString(idx++, adminGroup);
    pstmt.setString(idx++, brand);
    pstmt.setString(idx++, email);
    pstmt.setString(idx++, emailYn);

  } else if (actionFlag.equals("U")) {

    // update..
    sql = " update  admin_01t "
        + " set "
        + "   adminname = ?, "
        + "   admintype = ?, "
        + "   admingroup = ?, "
        + "   brand = ?, "
        + "   email = ?, "
        + "   email_yn = ? "
        + " where   adminid = ? ";

    pstmt = conn.prepareStatement(sql);
    pstmt.setString(idx++, adminName);
    pstmt.setString(idx++, adminType);
    pstmt.setString(idx++, adminGroup);
    pstmt.setString(idx++, brand);
    pstmt.setString(idx++, email);
    pstmt.setString(idx++, emailYn);
    pstmt.setString(idx++, adminId);

  } else if (actionFlag.equals("D")) {

    // delete..
    sql = " delete  admin_01t "
        + " where   adminid = ? ";

    pstmt = conn.prepareStatement(sql);
    pstmt.setString(idx++, adminId);

  } else if (actionFlag.equals("P")) {

    // initialize password..
    sql = " update  admin_01t "
        + " set     password = '1111' "
        + " where   adminid = ? ";

    pstmt = conn.prepareStatement(sql);
    pstmt.setString(idx++, adminId);

  } else {

    throw new UserDefinedException("The action is unknown.");

  }

  // execute ...
  iCnt = pstmt.executeUpdate();

  if (iCnt != 1) {
    throw new UserDefinedException("Check your data.");
  }

  conn.commit();
  isSucceeded = true;

} catch (UserDefinedException ue) {
  try { conn.rollback(); } catch (Exception ex) {}

  strMsg = ue.getMessage();
} catch (Exception e) {
  try { conn.rollback(); } catch (Exception ex) {}

  System.out.println("Exception /admin/apessuser/save : " + e.getMessage());
  throw e;
} finally {
  if (pstmt != null) {
    try { pstmt.close(); } catch (Exception e) {}
  }

  if (conn != null) {
    try { conn.setAutoCommit(true); } catch (Exception e) {}
    dbPool.freeConnection("intranet", conn);
  }
}

// \u00b0\u00e1\u00b0\u00fa \u00b8\u00de\u00bd\u00c3\u00c1\u00f6 \u00c3\u00b3\u00b8\u00ae
if (isSucceeded) strMsg = "The data are successfully processed.";
else strMsg = "The operation failed.\\n" + strMsg;

      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.print(( strMsg ));
      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/apessuser/save.jsp"), -4952570222140650581L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("apess/login_check.jsp"), 3743346625025852725L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  static {
    _jsp_string0 = "\n\n\n\n".toCharArray();
    _jsp_string1 = "\n<html>\n<head>\n<title></title>\n</head>\n<body>\n<form name=\"form1\" method=\"post\" action=\"./list.jsp\">\n</form>\n<script language=\"javascript\">\n  alert('".toCharArray();
    _jsp_string2 = "');\n  document.form1.submit();\n</script>\n</body>\n</html>\n".toCharArray();
  }
}
