/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._admin._buyer;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import common.util.*;
import dbconn.*;

public class _original_0sample_0in_0out_0excel__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String _adminid = "";
String _adminname = "";
String _admintype = "";
String _admingroup = "";
String _brand = "";
String _adminclass = "";

try{

  _adminid = (String) session.getAttribute("adminid");

  if( _adminid == null || _adminid.length() == 0 || _adminid.equals("null") ) {
    response.sendRedirect("/admin/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");
  _admintype = (String) session.getAttribute("admintype");
  _admingroup = (String) session.getAttribute("admingroup");
  _brand = (String) session.getAttribute("brand");
  _adminclass = (String) session.getAttribute("adminclass");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/admin/login_first.html");
  return;
}

      out.write('\n');
      
// Intranet DB
String _mysqlJdbcDriver = "com.mysql.jdbc.Driver";
String _urlLogin = "jdbc:mysql://10.2.1.247:3306/intranet";
String _userLogin = "intranet";
String _pwLogin = "tetris82";

// Futura DB
String _mssqlJdbcDriver = "com.microsoft.jdbc.sqlserver.SQLServerDriver";
String _urlFutura = "jdbc:microsoft:sqlserver://10.2.1.228:1433";
String _userFutura = "intranet";
String _pwFutura = "tetris";

// Uplod
String _uploadPath = "/var/tmp";
long _maxFileSize = 10*1024*1024;

// style image path
String _styleImgURL = "/image";

// Fault return invoice File URL
String _faultReturnInvoiceFileURL = "/image/Return";

// Memo \u00b0\u00fc\u00b7\u00c3 \u00ba\u00af\u00bc\u00f6
String _memoDataUrl = "/memo/upload";

// APESS SCM ID
String _apessID = "60171";

// Spec Sheet path
String _specSheetUrl = "/image/SPEC_SHEET";

// Spec Sheet upload path
String _specSheetUploadUrl = "/scan_spec_sheet";

// Sample Image Url
String _sampleIamgeUrl = "/image/SAMPLE_IMAGE";

// barcode file Image Url
String _barcodeFileUrl = "/image/Barcode";

// Invoice file path
String _invoiceFileUrl = "/order/inv_files";

// shipment file path
String _shipmentFileUrl = "/order/shipment_upload";

// Apess MU rate
double _MURate = 0.25;

// Ex-Factory Price Rate
double _EXRate = 0.04;


// Ex-Factory Price Rate for Apess2
double _EXRate2 = 0.04;

// Pronto DATA_AREA
//String _dataArea = "fft";
String _dataArea = "ffl";

// Pronto PIE Info
//String _pieIP = "10.2.1.226";
String _pieIP = "newffbpro.fastfuturebrands.com.au";
int _piePort = 7000;
//String _pieDataset = "apitest";
String _pieDataset = "apilive";

      out.write('\n');
      
response.setHeader("Content-Disposition", "attachment; filename=Original_Sample_In_Out.xls;");
response.setHeader("Content-Description", "JSP Generated Data");

String searchItemClass = request.getParameter("searchItemClass");
String searchFromDate = request.getParameter("searchFromDate");
String searchToDate = request.getParameter("searchToDate");
String searchSupplier = request.getParameter("searchSupplier");
String searchItemGroup = request.getParameter("searchItemGroup");
String searchBuyer = request.getParameter("searchBuyer");
String searchSampleNo = request.getParameter("searchSampleNo");
String searchNotReceivedOnly = request.getParameter("searchNotReceivedOnly");

int iRet = 0;
String outS = "";
String sql = "";

dbconn.DBConnManager dbPool = null;
Connection connScm = null;
dbconn.MatrixDataSet matrix = null;
dbconn.DataProcess dataProcess = null;

// set query
sql = " select  a.sequence_no, a.sample_no, a.item_class, e.sys_description item_class_name, to_char(a.input_date, 'dd/mm/yyyy'), "
    + "         a.item_group, c.sys_description, a.qty, a.place, f.place place_name, upper(a.buyer), a.supplier, d.name, "
    + "         to_char(a.sending_date, 'dd/mm/yyyy'), to_char(a.return_date, 'dd/mm/yyyy'), "
    + "         a.remarks, nvl(to_char(b.style_no), '-') style_no "
    + " from    VG_SAMPLE_IN_OUT a "
    + "         left outer join ( "
    + "           select  upper(trim(b.sup_stock_code)) supplier_no, max(b.xspo_style) style_no "
    + "           from    por5mf4@pronto a "
    + "                   inner join xstpu22@pronto b "
    + "                     on a.po_order_no = b.xspo_po_order_no "
    + "                     and a.backorder_flag = b.backorder_flag "
    + "           where   a.backorder_flag = ' ' "
    + "           and     a.po_order_status between '25' and '90' "
    + "           and     trim(b.sup_stock_code) is not null "
    + "           group by upper(trim(b.sup_stock_code)) "
    + "         ) b "
    + "           on a.sample_no = b.supplier_no "
    + "         left outer join sys5tbl5@pronto c "
    + "           on a.item_group = c.sys_tbl_code "
    + "           and c.sys_tbl_type = 'PG' "
    + "         left outer join login_01t d "
    + "           on a.supplier = d.id "
    + "         left outer join sys5tbl5@pronto e "
    + "           on a.item_class = e.sys_tbl_code "
    + "           and e.sys_tbl_type = 'OG' "
    + "         left outer join vg_sample_place f "
    + "           on a.place = f.seq_no ";

if (searchSampleNo.equals("")) {
  sql += " where   a.input_date between to_date('" + searchFromDate + "', 'dd/mm/yyyy') "
       + "         and  to_date('" + searchToDate + "', 'dd/mm/yyyy') ";

  if (!searchSupplier.equals("")) {
    sql += " and    a.supplier = '" + searchSupplier + "' ";
  }
  
  if (!searchItemGroup.equals("")) {
    sql += " and    a.item_group = '" + searchItemGroup + "' ";
  }

  if (!searchBuyer.equals("")) {
    sql += " and    upper(a.buyer) = '" + searchBuyer + "' ";
  }

  if (searchNotReceivedOnly.equals("Y")) {
    sql += " and    a.sending_date is not null "
         + " and    a.return_date is null "
         + " and    trunc(sysdate) - a.sending_date >= 28 ";
  }
} else {
  sql += " where   a.sample_no like '%'||upper('" + searchSampleNo + "')||'%' ";
}

if (!searchItemClass.equals("")) {
  sql += " and    a.item_class = " + searchItemClass;
}

if (_admingroup.equals("B") && !_brand.equals("")) {
  sql += " and    a.item_brand = " + _brand;
}

sql += " order by a.input_date desc, a.sample_no desc ";
//out.println(sql);

try {

  dataProcess = new dbconn.DataProcess();
  matrix = new dbconn.MatrixDataSet();
  dbPool = dbconn.DBConnManager.getInstance();
  connScm = dbPool.getConnection("intranet");

  //out.println(sql);
  iRet = dataProcess.RetrieveData(sql, matrix, connScm);
  connScm.commit();

} catch (Exception e) {
  if (connScm != null) {
    try { connScm.rollback(); } catch (Exception ex) {}
  }

  System.out.println("Exception /admin/buyer/original_sample_in_out_excel.jsp : " + e.getMessage());
  throw e;
} finally {
  if (connScm != null) { 
    dataProcess = new DataProcess();
    dataProcess.ManipulateData("alter session close database link pronto", connScm);
    dbPool.freeConnection("intranet", connScm); 
  }
}

// print out history list
for (int i = 0; i < iRet; i++) {
  int j = 0;
  String sequenceNo     = matrix.getRowData(i).getData(j++);
  String sampleNo       = matrix.getRowData(i).getData(j++);
  String item_class     = matrix.getRowData(i).getData(j++);
  String itemClassNm    = matrix.getRowData(i).getData(j++);
  String inputDate      = matrix.getRowData(i).getData(j++);
  String item_group     = matrix.getRowData(i).getData(j++);
  String itemGroupNm    = matrix.getRowData(i).getData(j++);
  String qty            = matrix.getRowData(i).getData(j++);
  String place          = matrix.getRowData(i).getData(j++);
  String placeNm        = matrix.getRowData(i).getData(j++);
  String buyer          = matrix.getRowData(i).getData(j++);
  String supplier       = matrix.getRowData(i).getData(j++);
  String supplierNm     = matrix.getRowData(i).getData(j++);
  String sendingDate    = matrix.getRowData(i).getData(j++);
  String returnDate     = matrix.getRowData(i).getData(j++);
  String remarks        = matrix.getRowData(i).getData(j++);
  String styleNo        = matrix.getRowData(i).getData(j++);

  outS += "<tr align='center'>"
        + " <td align='left'>" + sampleNo + "</td>"
        + " <td>" + itemClassNm + "</td>"
        + " <td>" + inputDate + "</td>"
        + " <td align='left'>" + itemGroupNm + "</td>"
        + " <td>" + item_group + "</td>"
        + " <td>" + qty + "</td>"
        + " <td>" + placeNm + "</td>"
        + " <td align='left'>" + buyer + "</td>"
        + " <td align='left'>" + supplierNm + "</td>"
        + " <td>" + sendingDate + "</td>"
        + " <td>" + returnDate + "</td>"
        + " <td align='left'>" + remarks + "</td>"
        + " <td>" + styleNo + "</td>"
        + "</tr>";
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.print(( outS ));
      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/buyer/original_sample_in_out_excel.jsp"), 8004698113755921224L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/login_check.jsp"), 6768457171426488389L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("common/CommonVars.jsp"), 5055347195946766837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  static {
    _jsp_string0 = "\n\n\n\n".toCharArray();
    _jsp_string1 = "\n<html>\n<head>\n</head>\n<body>\n<table width=\"1500\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tr align='center'>\n  <td>Sample No</td>\n  <td>Class</td>\n  <td>Date</td>\n  <td>Group Name</td>\n  <td>Group</td>\n  <td>Qty</td>\n  <td>Place</td>\n  <td>Buyer</td>\n  <td>Supplier</td>\n  <td>Sending Date</td>\n  <td>Receiving Date</td>\n  <td>Remarks</td>\n  <td>Style No</td>\n</tr>\n".toCharArray();
    _jsp_string2 = "\n</table>\n</body>\n</html>".toCharArray();
  }
}
