/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._admin._adminuser;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import common.util.*;
import dbconn.*;

public class _list__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;


  //-------------------------------------------
  // CopyRightLogo
  //
  //-------------------------------------------
  String CopyRightLogo()
  {
    String str;
    str = "<table width='99%' border='0' cellspacing='0' cellpadding='0' align='center'>";
    str += "<tr><td width='100%' height='2' align='center'>";
    str += "<HR width=100% size=2></td></tr>";
    str += "<tr><td width='100%' align='center'>";
    str += "<FONT size=2 >&copy;Copyright 2010 </font>";
    str += "<FONT size=2 color=green>Fast Future Brands Pty Ltd. All Rights Reserved.</FONT><BR>";
    str += "<FONT size=2> For more information,please contact</font> <FONT size=2 color=blue><A href='mailto:scm@ffb.net.au'>scm@ffb.net.au</A></FONT>";
    str += "</td></tr></table>";

    return (String)str;
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String _adminid = "";
String _adminname = "";
String _admintype = "";
String _admingroup = "";
String _brand = "";
String _adminclass = "";

try{

  _adminid = (String) session.getAttribute("adminid");

  if( _adminid == null || _adminid.length() == 0 || _adminid.equals("null") ) {
    response.sendRedirect("/admin/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");
  _admintype = (String) session.getAttribute("admintype");
  _admingroup = (String) session.getAttribute("admingroup");
  _brand = (String) session.getAttribute("brand");
  _adminclass = (String) session.getAttribute("adminclass");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/admin/login_first.html");
  return;
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      
int iRet = 0;
String strSep = "|!^";
String outS = "";
String sql = "";
dbconn.DBConnManager dbPool = null;
Connection conn = null;
dbconn.MatrixDataSet matrix = null;
dbconn.MatrixDataSet matrix1 = null;
dbconn.MatrixDataSet matrix2 = null;
dbconn.MatrixDataSet matrix3 = null;
dbconn.MatrixDataSet matrix4 = null;
dbconn.DataProcess dataProcess = null;

try {

  matrix = new dbconn.MatrixDataSet();
  matrix1 = new dbconn.MatrixDataSet();
  matrix2 = new dbconn.MatrixDataSet();
  matrix3 = new dbconn.MatrixDataSet();
  matrix4 = new dbconn.MatrixDataSet();
  dataProcess = new dbconn.DataProcess();
  dbPool = dbconn.DBConnManager.getInstance();
  conn = dbPool.getConnection("intranet");

  // Read Admin User List
  sql = " select  a.adminid, a.adminname, a.admintype, nvl(c1.code_name, a.admintype), "
      + "         a.admingroup, nvl(c2.code_name, a.admingroup), a.brand, nvl(c3.code_name, a.brand), "
      + "         a.adminclass, nvl(c4.code_name, a.adminclass) "
      + " from    admin_01t a "
      + "         left outer join vg_common_code c1 "
      + "           on a.admintype = c1.code "
      + "           and c1.type = 'USER_TYPE' "
      + "         left outer join vg_common_code c2 "
      + "           on a.admingroup = c2.code "
      + "           and c2.type = 'USER_GROUP' "
      + "         left outer join vg_common_code c3 "
      + "           on a.brand = c3.code "
      + "           and c3.type = 'USER_BRAND' "
      + "         left outer join vg_common_code c4 "
      + "           on a.adminclass = c4.code "
      + "           and c4.type = 'USER_CLASS' "
      + " where   a.admintype in "
      + "         ( "
      + "           select  code "
      + "           from    vg_common_code "
      + "           where   type = 'USER_TYPE' "
      + "           and     related_code = "
      + "                   ( "
      + "                     select  related_code "
      + "                     from    vg_common_code "
      + "                     where   type = 'USER_TYPE' "
      + "                     and     code = '" + _admintype + "' "
      + "                   ) "
      + "         ) "
      + " order by c1.sort_order, c2.sort_order, c3.sort_order, c4.sort_order, a.adminname ";

  //out.println(sql+"<br>");
  iRet = dataProcess.RetrieveData(sql, matrix, conn);
  
  // read user type code info
  sql = " select  code, code_name "
      + " from    vg_common_code "
      + " where   type = 'USER_TYPE' "
      + " and     related_code = "
      + "         ( "
      + "           select  related_code "
      + "           from    vg_common_code "
      + "           where   type = 'USER_TYPE' "
      + "           and     code = '" + _admintype + "' "
      + "         ) "
      + " and     use_yn = 'Y' "
      + " order by sort_order ";

  dataProcess.RetrieveData(sql, matrix1, conn);
  
  // read user group code info
  sql = " select  code, code_name "
      + " from    vg_common_code "
      + " where   type = 'USER_GROUP' "
      + " and     ( related_code =  '0' "
      + "           or related_code = "
      + "              ( "
      + "                select  related_code "
      + "                from    vg_common_code "
      + "                where   type = 'USER_TYPE' "
      + "                and     code = '" + _admintype + "' "
      + "              ) "
      + "         ) "
      + " and     use_yn = 'Y' "
      + " order by sort_order ";

  dataProcess.RetrieveData(sql, matrix2, conn);
  
  // read user brand code info
  sql = " select  code, code_name "
      + " from    vg_common_code "
      + " where   type = 'USER_BRAND' "
      + " and     nvl(related_code, ' ') <> 'Z' "
      + " and     use_yn = 'Y' "
      + " order by sort_order ";

  dataProcess.RetrieveData(sql, matrix3, conn);
  
  // read user class code info
  sql = " select  code, code_name "
      + " from    vg_common_code "
      + " where   type = 'USER_CLASS' "
      + " and     use_yn = 'Y' "
      + " order by sort_order ";

  dataProcess.RetrieveData(sql, matrix4, conn);

} catch (Exception e) {
  System.out.println("Exception /admin/adminuser/list : " + e.getMessage());
  throw e;
} finally {
  if (conn != null) { dbPool.freeConnection("intranet", conn); }
}

// print list
for (int i = 0; i < iRet; i++) {
  int j = 0;
  String adminId    = matrix.getRowData(i).getData(j++);
  String adminName  = matrix.getRowData(i).getData(j++);
  String adminType  = matrix.getRowData(i).getData(j++);
  String adminTypeName = matrix.getRowData(i).getData(j++);
  String adminGroup = matrix.getRowData(i).getData(j++);
  String adminGroupName = matrix.getRowData(i).getData(j++);
  String brand      = matrix.getRowData(i).getData(j++);
  String brandName  = matrix.getRowData(i).getData(j++);
  String adminClass = matrix.getRowData(i).getData(j++);
  String adminClassName = matrix.getRowData(i).getData(j++);

  String bgColor = "#fffff0";
  if (i%2 > 0) bgColor = "#eeeee0";

  String strLink = "<a href=\"javascript:fnSetData('"
                  + adminId + strSep
                  + StringUtil.replaceScriptString(adminName) + strSep
                  + adminType + strSep
                  + adminGroup + strSep
                  + brand + strSep
                  + adminClass
                  + "')\">" + adminId + "</a>";

  outS += "<tr align='center' style='background-color:" + bgColor + ";'>"
        + " <td>" + strLink + "</td>"
        + " <td align='left'>" + adminName + "</td>"
        + " <td>" + adminTypeName + "</td>"
        + " <td>" + adminGroupName + "</td>"
        + " <td>" + brandName + "</td>"
        + " <td>" + adminClassName + "</td>"
        + "</tr>";
}

// print user type options
String userTypeOptions = "<option value=''></option>";

for (int i = 0; i < matrix1.getRowCount(); i++) {
  int j = 0;
  String code = matrix1.getRowData(i).getData(j++);
  String codeName = matrix1.getRowData(i).getData(j++);
  
  userTypeOptions += "<option value='" + code + "'>" + codeName + "</option>";
}

// print user group options
String userGroupOptions = "<option value=''></option>";

for (int i = 0; i < matrix2.getRowCount(); i++) {
  int j = 0;
  String code = matrix2.getRowData(i).getData(j++);
  String codeName = matrix2.getRowData(i).getData(j++);

  userGroupOptions += "<option value='" + code + "'>" + codeName + "</option>";
}

// print user brand options
String userBrandOptions = "<option value=''></option>";

for (int i = 0; i < matrix3.getRowCount(); i++) {
  int j = 0;
  String code = matrix3.getRowData(i).getData(j++);
  String codeName = matrix3.getRowData(i).getData(j++);

  userBrandOptions += "<option value='" + code + "'>" + codeName + "</option>";
}

// print user class options
String userClassOptions = "<option value=''></option>";

for (int i = 0; i < matrix4.getRowCount(); i++) {
  int j = 0;
  String code = matrix4.getRowData(i).getData(j++);
  String codeName = matrix4.getRowData(i).getData(j++);

  userClassOptions += "<option value='" + code + "'>" + codeName + "</option>";
}

      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.print(( strSep ));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print(( userGroupOptions ));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print(( userTypeOptions ));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print(( userBrandOptions ));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print(( userClassOptions ));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print(( iRet ));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print(( outS ));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      
out.println(CopyRightLogo());

      out.write(_jsp_string10, 0, _jsp_string10.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/adminuser/list.jsp"), -338212926400781887L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/login_check.jsp"), 6768457171426488389L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("bottom_line.jsp"), 5941552803368297242L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string8;
  private final static char []_jsp_string2;
  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  private final static char []_jsp_string3;
  private final static char []_jsp_string7;
  private final static char []_jsp_string4;
  private final static char []_jsp_string6;
  private final static char []_jsp_string5;
  private final static char []_jsp_string10;
  private final static char []_jsp_string9;
  static {
    _jsp_string8 = "</td>\n</tr>\n</table>\n<table width='90%' border='0' cellspacing='1' cellpadding='2' align='center' class='table_bg'>\n<tr class='table_header_center'>\n  <td>Admin ID</td>\n  <td>Admin Name</td>\n  <td>Location</td>\n  <td>Admin Group</td>\n  <td>Brand</td>\n  <td>Class</td>\n</tr>\n".toCharArray();
    _jsp_string2 = "\n<html>\n<head>\n<title></title>\n<link href=\"/common/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\n<script language=javascript src=\"/common/js/util.js\"></script>\n<script language=\"javascript\">\nfunction fnNew(frm) {\n  frm.reset();\n  frm.adminId.readOnly = false;\n  frm.adminId.style.backgroundColor = '#ffffff';\n  frm.adminId.focus();\n}\n\nfunction fnSave(frm) {\n  if (!jf_IsNumeric(frm.adminId.value)) {\n    alert('Input Admin ID. Numbers are only accepted.');\n    frm.adminId.select();\n    return;\n  }\n\n  if (!jf_ChkValue(frm.adminName.value)) {\n    alert('Input Admin Name.');\n    frm.adminName.select();\n    return;\n  }\n\n  if (frm.adminName.value.indexOf('\"') >= 0) {\n    alert('Double quotes(\") are not accepted in Admin Name.');\n    frm.adminName.select();\n    return;\n  }\n\n  if (frm.adminType.selectedIndex == 0) {\n    alert('Input Location.');\n    frm.adminType.focus();\n    return;\n  }\n\n  if (frm.adminGroup.selectedIndex == 0) {\n    alert('Input Admin Group.');\n    frm.adminGroup.focus();\n    return;\n  }\n\n  if (frm.adminGroup.value == 'B') {\n    if (frm.brand.selectedIndex == 0) {\n      alert('Input Brand.');\n      frm.brand.focus();\n      return;\n    }\n\n    //if (frm.adminClass.selectedIndex == 0) {\n    //  alert('Input Class.');\n    //  frm.adminClass.focus();\n    //  return;\n    //}\n  }\n\n  if (confirm('Do you really want to save these data?')) {\n    // if the user is not a buyer, clear brand, class values.\n    if (frm.adminGroup.value != 'B') {\n      frm.brand.selectedIndex = 0;\n      frm.adminClass.selectedIndex = 0;\n    }\n\n    // if the user belongs to Non-Apparel buyer, clear the brand value.\n    //if (frm.adminClass.value == '2') {\n    //  frm.brand.selectedIndex = 0;\n    //}\n\n    frm.action = './save.jsp';\n    frm.submit();\n  }\n}\n\nfunction fnDelete(frm) {\n  if (frm.actionFlag.value != 'U' || !frm.adminId.value) {\n    alert('Select an item you want to delete.');\n    return;\n  }\n\n  if (confirm('Do you really want to delete the selected item?')) {\n    frm.actionFlag.value = 'D';\n    frm.action = './save.jsp';\n    frm.submit();\n  }\n}\n\nfunction fnSetData(strParams) {\n  var params = strParams.split('".toCharArray();
    _jsp_string0 = "\n\n\n\n".toCharArray();
    _jsp_string1 = "\n\n\n".toCharArray();
    _jsp_string3 = "');\n  var j = 0;\n\n  with (document.form1) {\n    adminId.value = params[j++];\n    adminName.value = params[j++];\n    jf_fnSetSelectOption(adminType, params[j++]);\n    jf_fnSetSelectOption(adminGroup, params[j++]);\n    jf_fnSetSelectOption(brand, params[j++]);\n    jf_fnSetSelectOption(adminClass, params[j++]);\n\n    actionFlag.value = 'U';\n    adminId.readOnly = true;\n    adminId.style.backgroundColor = '#e8e8e8';\n  }\n}\n</script>\n</head>\n<body leftmargin='0' topmargin='0' marginwidth='0' marginheight='0'>\n<table width='840' border='0' cellspacing='0' cellpadding='0'><tr><td>\n\n<table width='99%' border='0' cellspacing='0' cellpadding='0' align=\"center\">\n<tr>\n  <td height='15' colspan='2'></td>\n</tr>\n<tr>\n  <td width='3%'><img src='/img/title_icon.gif'></td>\n  <td width='*' class='left_title'>Admin User List</td>\n</tr>\n<tr>\n  <td width='100%' height='2' colspan='2'><hr width='100%'></td>\n</tr>\n<tr>\n  <td height='10' colspan='2'></td>\n</tr>\n</table>\n\n<table width='90%' border='0' cellspacing='1' cellpadding='2' align='center' class='table_bg'>\n<form name='form1' method='post'>\n<input type='hidden' name='actionFlag' value='I'>\n<tr>\n  <td width='20%' class='table_header_center'>Admin ID(*)</td>\n  <td width='30%' class='table_bg_bright'><input type='text' name='adminId' size='30' maxlength='10'></td>\n  <td width='20%' class='table_header_center'>Admin Name(*)</td>\n  <td width='30%' class='table_bg_bright'><input type='text' name='adminName' size='30' maxlength='30'></td>\n</tr>\n<tr>\n  <td class='table_header_center'>Admin Group(*)</td>\n  <td class='table_bg_bright'><select name='adminGroup'>".toCharArray();
    _jsp_string7 = "</select></td>\n</tr>\n</table>\n<table width='90%' border='0' cellspacing='0' cellpadding='0' align='center'>\n<tr>\n  <td height='15'></td>\n</tr>\n<tr>\n  <td align='center'>\n    <input type='button' value='New' onclick='fnNew(this.form);'>\n    <input type='button' value='Save' onclick='fnSave(this.form);'>\n    <input type='button' value='Delete' onclick='fnDelete(this.form);'>\n  </td>\n</tr>\n<tr>\n  <td height='5'></td>\n</tr>\n</table>\n\n<table width='90%' border='0' cellspacing='0' cellpadding='0' align='center'>\n<tr>\n  <td></td>\n  <td align='right'>Total : ".toCharArray();
    _jsp_string4 = "</select></td>\n  <td class='table_header_center'>Location(*)</td>\n  <td class='table_bg_bright'><select name='adminType'>".toCharArray();
    _jsp_string6 = "</select></td>\n  <td class='table_header_center'>Class</td>\n  <td class='table_bg_bright'><select name='adminClass'>".toCharArray();
    _jsp_string5 = "</select></td>\n</tr>\n<tr>\n  <td class='table_header_center'>Brand</td>\n  <td class='table_bg_bright'><select name='brand'>".toCharArray();
    _jsp_string10 = "\n</tr></td></table>\n</body>\n</html>".toCharArray();
    _jsp_string9 = "\n</table>\n<table width='90%' border='0' cellspacing='0' cellpadding='0' align='center'>\n<tr>\n  <td height='15'></td>\n</tr>\n<tr>\n  <td align='center'>\n    <input type='button' value='New' onclick='fnNew(this.form);'>\n    <input type='button' value='Save' onclick='fnSave(this.form);'>\n    <input type='button' value='Delete' onclick='fnDelete(this.form);'>\n  </td>\n</tr>\n</table>\n</form>\n".toCharArray();
  }
}
