/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.net.*;
import java.sql.*;
import common.*;
import dbconn.*;

public class _code_0init__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String scmid = "";
String scmnm = "";
String usertype = "";
String usergroup = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";
String _admingroup = "";
String _apessid = "";
String _apessname = "";

try{
  scmid = (String) session.getAttribute("scmid");
  _adminid = (String) session.getAttribute("adminid");

  if( (scmid == null || scmid.length() == 0 || scmid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");

  _apessid = (String) session.getAttribute("apessid");
  _apessname = (String) session.getAttribute("apessname");

  scmnm = (String) session.getAttribute("scmnm");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  //scmsubids = (String) session.getAttribute("scmsubids");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/login_first.html");
  return;
}

      out.write('\n');
      
String password = request.getParameter("password");
String oldPassword = "";

String sql = "";
int iCnt = 0;
String strMsg = "";
dbconn.DBConnManager dbPool = null;
Connection conn = null;
dbconn.MatrixDataSet matrix = null;
dbconn.DataProcess dataProcess = null;
PreparedStatement pstmt = null;

try {

  if (password.equals("1111")) {
    throw new UserDefinedException("The new password is not acceptable. Change your password.");
  }

  dbPool = dbconn.DBConnManager.getInstance();
  conn = dbPool.getConnection("intranet");
  matrix = new dbconn.MatrixDataSet();
  dataProcess = new dbconn.DataProcess();

  // read old password
  sql = " select  passwd "
      + " from    login_01t "
      + " where   id = '" + scmid + "' ";
  
  iCnt = dataProcess.RetrieveData(sql, matrix, conn);

  if (iCnt > 0) {
    oldPassword = matrix.getRowData(0).getData(0);
  } else {
    throw new UserDefinedException("Can't find Supplier Information.");
  }

  if (password.equals(oldPassword)) {
    throw new UserDefinedException("The new password is not acceptable. Change your password.");
  }

  // update
  int idx = 0;
  conn.setAutoCommit(false);

  sql = " update  login_01t "
      + " set     passwd = ?, pw_date = sysdate "
      + " where   id = ? ";

  pstmt = conn.prepareStatement(sql);
  pstmt.setString(++idx, password);
  pstmt.setString(++idx, scmid);

  iCnt = pstmt.executeUpdate();

  if (iCnt != 1) {
    throw new UserDefinedException("Password update failed.");
  }

  conn.commit();
  response.sendRedirect("index2.jsp");
  return;

} catch (UserDefinedException ue) {
  try { conn.rollback(); } catch (Exception ex) {}
  strMsg = ue.getMessage();
} catch (Exception e) {
  try { conn.rollback(); } catch (Exception ex) {}
  strMsg = "System error occured. Ask to I.T. staff.";
  System.out.println("Exception code_initpass : " + e.getMessage());
} finally {
  if (pstmt != null) {
    try { pstmt.close(); } catch (Exception e) {}
  }

  if (conn != null) {
    try { conn.setAutoCommit(true); } catch (Exception e) {}
    dbPool.freeConnection("intranet", conn);
  }
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.print(( strMsg ));
      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("code_init.jsp"), 6444715218783661503L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("login_check.jsp"), 5313538553479869376L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string1;
  static {
    _jsp_string0 = "\n\n\n\n\n".toCharArray();
    _jsp_string2 = "</b>\n      <br><a href='javascript:back();'>back</a></font></td>\n  </tr>\n</table>\n<P>\n</P>\n</BODY>\n</HTML>\n".toCharArray();
    _jsp_string1 = "\n<HTML>\n<HEAD>\n<script language=\"javascript\">\nfunction back()\n{\n  location.href = 'initpass2.html';\n}\n</script>\n</HEAD>\n<BODY>\n<BODY  bgcolor=\"white\" TOPMARGIN=5 LEFTMARGIN=5>\n<center>\n<TABLE cellSpacing=0 cellPadding=0 width=\"433\" >\n<TBODY>\n  <TR>\n    <TD class=pgCnt vAlign=top width=1004 bgColor=#666699 height=24><IMG\n      height=18 src=\"../img/tb_st.gif\"\n      width=803 border=0></TD>\n    <TD vAlign=top width=54 height=70 rowSpan=3></TD></TR>\n  <TR>\n    <TD class=tbTxt noWrap width=689 bgColor=#666699 height=31>\n      <CENTER><B><I><FONT color=#ffffff><FONT class=tbTxt\n      face=\"Times New Roman\" size=5>Welcome to Supply Chain Management\n      System</FONT><FONT class=tbTxt face=\"Times New Roman\" size=4>\n      </FONT><FONT class=tbTxt face=\"Times New Roman\"\n      size=2></FONT></FONT></I></B></CENTER></TD></TR>\n  <TR>\n    <TD class=pgCnt vAlign=bottom noWrap width=602 height=15><IMG height=13\n      src=\"../img/tb_sb.gif\" width=804 border=0></TD></TR></TBODY>\n</TABLE>\n\n<table border=\"0\">\n  <tr><td height=\"50\"></td>\n  </tr>\n  <tr>\n    <td colspan=\"7\" align=center>\n    <img border=\"0\" src=\"/img/login.jpg\"></td>\n  </tr>\n  <tr>\n    <td align='center'><font size=2><b>".toCharArray();
  }
}
