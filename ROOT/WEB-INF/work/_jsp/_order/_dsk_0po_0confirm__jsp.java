/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._order;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.util.*;
import com.pronto.pie.*;
import com.pronto.pie.core.*;
import dbconn.*;

public class _dsk_0po_0confirm__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;


  //-------------------------------------------
  // CopyRightLogo
  //
  //-------------------------------------------
  String CopyRightLogo()
  {
    String str;
    str = "<table width='99%' border='0' cellspacing='0' cellpadding='0' align='center'>";
    str += "<tr><td width='100%' height='2' align='center'>";
    str += "<HR width=100% size=2></td></tr>";
    str += "<tr><td width='100%' align='center'>";
    str += "<FONT size=2 >&copy;Copyright 2010 </font>";
    str += "<FONT size=2 color=green>Fast Future Brands Pty Ltd. All Rights Reserved.</FONT><BR>";
    str += "<FONT size=2> For more information,please contact</font> <FONT size=2 color=blue><A href='mailto:scm@ffb.net.au'>scm@ffb.net.au</A></FONT>";
    str += "</td></tr></table>";

    return (String)str;
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String scmid = "";
String scmnm = "";
String usertype = "";
String usergroup = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";
String _admingroup = "";
String _apessid = "";
String _apessname = "";

try{
  scmid = (String) session.getAttribute("scmid");
  _adminid = (String) session.getAttribute("adminid");

  if( (scmid == null || scmid.length() == 0 || scmid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");

  _apessid = (String) session.getAttribute("apessid");
  _apessname = (String) session.getAttribute("apessname");

  scmnm = (String) session.getAttribute("scmnm");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  //scmsubids = (String) session.getAttribute("scmsubids");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/login_first.html");
  return;
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      
// Intranet DB
String _mysqlJdbcDriver = "com.mysql.jdbc.Driver";
String _urlLogin = "jdbc:mysql://10.2.1.247:3306/intranet";
String _userLogin = "intranet";
String _pwLogin = "tetris82";

// Futura DB
String _mssqlJdbcDriver = "com.microsoft.jdbc.sqlserver.SQLServerDriver";
String _urlFutura = "jdbc:microsoft:sqlserver://10.2.1.228:1433";
String _userFutura = "intranet";
String _pwFutura = "tetris";

// Uplod
String _uploadPath = "/var/tmp";
long _maxFileSize = 10*1024*1024;

// style image path
String _styleImgURL = "/image";

// Fault return invoice File URL
String _faultReturnInvoiceFileURL = "/image/Return";

// Memo \u00b0\u00fc\u00b7\u00c3 \u00ba\u00af\u00bc\u00f6
String _memoDataUrl = "/memo/upload";

// APESS SCM ID
String _apessID = "60171";

// Spec Sheet path
String _specSheetUrl = "/image/SPEC_SHEET";

// Spec Sheet upload path
String _specSheetUploadUrl = "/scan_spec_sheet";

// Sample Image Url
String _sampleIamgeUrl = "/image/SAMPLE_IMAGE";

// barcode file Image Url
String _barcodeFileUrl = "/image/Barcode";

// Invoice file path
String _invoiceFileUrl = "/order/inv_files";

// shipment file path
String _shipmentFileUrl = "/order/shipment_upload";

// Apess MU rate
double _MURate = 0.25;

// Ex-Factory Price Rate
double _EXRate = 0.04;


// Ex-Factory Price Rate for Apess2
double _EXRate2 = 0.04;

// Pronto DATA_AREA
//String _dataArea = "fft";
String _dataArea = "ffl";

// Pronto PIE Info
//String _pieIP = "10.2.1.226";
String _pieIP = "newffbpro.fastfuturebrands.com.au";
int _piePort = 7000;
//String _pieDataset = "apitest";
String _pieDataset = "apilive";

      out.write('\n');
      
String ag_orderby = request.getParameter("ag_orderby");
String ag_brand = request.getParameter("ag_brand");
String ag_buyer = request.getParameter("ag_buyer");
String selectedPOs = request.getParameter("selectedPOs");

String confirmedPOs = "";
String failedPOs = "";

String sql = "";
String sql1 = "";
String sql2 = "";
String sql3 = "";
int iRet = 0;
int iRet2 = 0;
int iCnt = 0;
Connection connScm = null;
Connection connPronto = null;
PreparedStatement pstmt1 = null;
PreparedStatement pstmt2 = null;
dbconn.DBConnManager dbPool = null;
dbconn.MatrixDataSet matrix = null;
dbconn.MatrixDataSet matrix2 = null;
dbconn.DataProcess dataProcess = null;

// split pos
String[] pos = selectedPOs.split("\\^");
String po_nos = "";
for (int i = 0; i < pos.length; i++) {
  String[] poMr = pos[i].split(":");
  po_nos += (i > 0 ? "," : "") + poMr[0];
}

// query for select po list
sql = " select  po_no "
    + " from    po_style_etc "
    + " where   po_no in (" + po_nos + ") ";

// query for insert
sql1 =  " insert  into po_style_etc "
      + "         (po_no, scm_pr_date, ex_shipping_date, inspector, inspect_date, "
      + "          top_app_date, apess_comment, ex_factory_price, mr, div_status) "
      + " values  (?, null, null, null, null, null, null, ?, ?, '0') ";

// query for update
sql2 =  " update  po_style_etc "
      + " set     mr = ?, ex_factory_price = nvl(ex_factory_price, ?) "
      + " where   po_no = ? ";

try {

  PIEClient pie = new PIESocketClient(_pieIP, _piePort, _pieDataset);

  dbPool = DBConnManager.getInstance();
  connScm = dbPool.getConnection("intranet");
  connPronto = dbPool.getConnection("pronto");
  matrix = new dbconn.MatrixDataSet();
  matrix2 = new dbconn.MatrixDataSet();
  dataProcess = new dbconn.DataProcess();
  connScm.setAutoCommit(false);

  // po list
  iRet = dataProcess.RetrieveData(sql, matrix, connScm);
  ArrayList poList = new ArrayList();

  for (int i = 0; i < iRet; i++) {
    poList.add(matrix.getRowData(i).getData(0));
  }

  pstmt1 = connScm.prepareStatement(sql1);
  pstmt2 = connScm.prepareStatement(sql2);

  for (int i = 0; i < pos.length; i++) {
    String[] poMr = pos[i].split(":");

    try {
      // insert or update po_style_etc info
      ////////////////////////////////////////////////////
      // calculate ex_factory_price
      //String supplier_name = "";
      //String order_date = "";
      double currency_unit_price = 0.0d;
      double commission_rate = 0.0d;
      double ex_factory_price = 0.0d;

      sql3 = " select  b.vendor_price, nvl(e.rate, 0) "
           + " from    por5mf4 a "
           + "         inner join xstpu22 b "
           + "           on a.po_order_no = b.xspo_po_order_no "
           + "           and a.backorder_flag = b.backorder_flag "
           + "         inner join cre5mfi c "
           + "           on a.cre_accountcode = c.cre_accountcode "
           + "         inner join nad5mfa d "
           + "           on c.cre_accountcode = d.accountcode "
           + "         left outer join supplier_commission@scm e "
           + "           on d.na_country_code = e.supplier_class "
           + "           and a.po_order_date between e.from_date and e.to_date "
           + " where   b.xspo_po_order_no = " + poMr[0]
           + " and     b.backorder_flag = ' ' "
           + " and     d.na_type = 'C' ";

      iRet2 = dataProcess.RetrieveData(sql3, matrix2, connPronto);

      if (iRet2 > 0) {
        int k = 0;
        //supplier_name = matrix2.getRowData(0).getData(k++);
        //order_date = matrix2.getRowData(0).getData(k++);
        currency_unit_price = Double.parseDouble(matrix2.getRowData(0).getData(k++));
        commission_rate = Double.parseDouble(matrix2.getRowData(0).getData(k++));

        ex_factory_price = Math.round((currency_unit_price/(1.0d + commission_rate))*100.0d)/100.0d;
      }
      ////////////////////////////////////////////////////

      int j = 0;
  
      if (poList.contains(poMr[0])) {
        pstmt2.setString(++j, poMr[1]);
        pstmt2.setDouble(++j, ex_factory_price);
        pstmt2.setString(++j, poMr[0]);
        iCnt = pstmt2.executeUpdate();
      } else {
        pstmt1.setString(++j, poMr[0]);
        pstmt1.setDouble(++j, ex_factory_price);
        pstmt1.setString(++j, poMr[1]);
        iCnt = pstmt1.executeUpdate();
      }

      if (iCnt != 1) {
        throw new Exception("Insert or Update error.");
      }

      // call PIE
      Map params = new HashMap();
      params.put("lp-po-order-no", poMr[0]);
      ApiResponse apiResponse = pie.execute("set-po-on-order", params);
  
      if (apiResponse.getErrorCode() != 0) {
        throw new Exception("API Response error.");
      }
      
      Map outParams = apiResponse.getResponseParams();
      String retMsg = (String) outParams.get("lr-ret-msg");
  
      if (!retMsg.equals("OK")) {
        throw new Exception("API Response error.");
      }
      
      // commit
      connScm.commit();

      confirmedPOs += (confirmedPOs.length() > 0 ? ", " : "") + "<a href=\"javascript:fnPrint('" + poMr[0] + "');\">" + poMr[0] + "</a>";
    } catch (Exception ie) {
      try { connScm.rollback(); } catch (Exception ex) {}
      failedPOs += (failedPOs.length() > 0 ? ", " : "") + poMr[0];
    }
  }

} catch (Exception e) {
  if (confirmedPOs.equals("") && failedPOs.equals("")) {
    for (int i = 0; i < pos.length; i++) {
      String[] poMr = pos[i].split(":");
      failedPOs += (failedPOs.length() > 0 ? ", " : "") + poMr[0];
    }
  }

  System.out.println("Exception in dsk_po_confirm : " + e.getMessage());
  throw e;
} finally {
  if (pstmt1 != null) {
    try { pstmt1.close(); } catch (Exception e) {}
  }

  if (pstmt2 != null) {
    try { pstmt2.close(); } catch (Exception e) {}
  }

  if (connScm != null) {
    try { connScm.setAutoCommit(true); } catch (Exception e) {}
    dbPool.freeConnection("intranet", connScm);
  }

  if (connPronto != null) {
    dbPool.freeConnection("pronto", connPronto);
  }
}

      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.print(( confirmedPOs ));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print(( (failedPOs.length() > 0 ? "Failed POs: " + failedPOs : "") ));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
out.println(CopyRightLogo());

      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print(( ag_brand ));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print(( ag_buyer ));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print(( ag_orderby ));
      out.write(_jsp_string8, 0, _jsp_string8.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("order/dsk_po_confirm.jsp"), -2368229022618392702L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("login_check.jsp"), 5313538553479869376L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("bottom_line.jsp"), 5941552803368297242L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("common/CommonVars.jsp"), 5055347195946766837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string5;
  private final static char []_jsp_string8;
  private final static char []_jsp_string4;
  private final static char []_jsp_string3;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string6;
  private final static char []_jsp_string0;
  private final static char []_jsp_string7;
  static {
    _jsp_string5 = "\n\n</td></tr></table>\n<form name='form1' method='post' action='./dsk_po_confirm_search.jsp'>\n<input type='hidden' name='ag_brand' value='".toCharArray();
    _jsp_string8 = "'>\n</form>\n<form name='form2' method='post'>\n<input type='hidden' name='po_no_selected'>\n</form>\n</BODY>\n</HTML>\n".toCharArray();
    _jsp_string4 = "</font></B></TD>\n</tr>\n<tr>\n  <TD align='center'><a href='javascript:document.form1.submit();'>Go To PO Confirmation List</a></TD>\n</tr>\n</TABLE>\n\n".toCharArray();
    _jsp_string3 = "</font></B></TD>\n</tr>\n<tr>\n  <TD><br><br><B><font color='red'>".toCharArray();
    _jsp_string1 = "\n\n\n".toCharArray();
    _jsp_string2 = "\n<HTML>\n<link href=\"/common/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\n<script language=JavaScript>\nfunction fnPrint(po_no) {\n  var win = window.open('', \"winPrint\", \"toolbar=no, menubar=no, resizable=no, scrollbars=yes, width=800, height=700\");\n\n  if (win) {\n    document.form2.po_no_selected.value = po_no;\n    document.form2.action = './po_print.jsp';  \n    document.form2.target = win.name;\n    document.form2.submit();\n  }\n}\n</script>\n<body leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\">\n<table width=\"840\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr><td>\n\n<table width=\"99%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\n<tr>\n  <td width=\"100%\" height=\"15\" colspan=\"2\"></td>\n</tr>\n<tr>\n  <td width=\"3%\"><img src=\"/img/title_icon.gif\"></td>\n  <td width=\"*\" class=\"left_title\">Purchase Order Confirmation</td>\n</tr>\n<tr>\n  <td width=\"100%\" height=\"2\" colspan=\"2\"><hr width=\"100%\"></td>\n</tr>\n<tr>\n  <td width=\"100%\" height=\"10\" colspan=\"2\"></td>\n</tr>\n</table>\n\n<TABLE width=\"80%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\n<tr>\n  <TD><br><br><B><font color='blue'>Confirmed POs: ".toCharArray();
    _jsp_string6 = "'>\n<input type='hidden' name='ag_buyer' value='".toCharArray();
    _jsp_string0 = "\n\n\n\n\n\n".toCharArray();
    _jsp_string7 = "'>\n<input type='hidden' name='ag_orderby' value='".toCharArray();
  }
}
