/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._order;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.net.*;
import java.sql.*;
import java.util.*;
import dbconn.*;
import common.*;
import common.util.*;

public class _invoice_0update__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;


  //-------------------------------------------
  // CopyRightLogo
  //
  //-------------------------------------------
  String CopyRightLogo()
  {
    String str;
    str = "<table width='99%' border='0' cellspacing='0' cellpadding='0' align='center'>";
    str += "<tr><td width='100%' height='2' align='center'>";
    str += "<HR width=100% size=2></td></tr>";
    str += "<tr><td width='100%' align='center'>";
    str += "<FONT size=2 >&copy;Copyright 2010 </font>";
    str += "<FONT size=2 color=green>Fast Future Brands Pty Ltd. All Rights Reserved.</FONT><BR>";
    str += "<FONT size=2> For more information,please contact</font> <FONT size=2 color=blue><A href='mailto:scm@ffb.net.au'>scm@ffb.net.au</A></FONT>";
    str += "</td></tr></table>";

    return (String)str;
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/order/../error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      com.jspsmart.upload.SmartUpload smart;
      smart = (com.jspsmart.upload.SmartUpload) pageContext.getAttribute("smart");
      if (smart == null) {
        smart = new com.jspsmart.upload.SmartUpload();
        pageContext.setAttribute("smart", smart);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String scmid = "";
String scmnm = "";
String usertype = "";
String usergroup = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";
String _admingroup = "";
String _apessid = "";
String _apessname = "";

try{
  scmid = (String) session.getAttribute("scmid");
  _adminid = (String) session.getAttribute("adminid");

  if( (scmid == null || scmid.length() == 0 || scmid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");

  _apessid = (String) session.getAttribute("apessid");
  _apessname = (String) session.getAttribute("apessname");

  scmnm = (String) session.getAttribute("scmnm");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  //scmsubids = (String) session.getAttribute("scmsubids");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/login_first.html");
  return;
}

      out.write(_jsp_string2, 0, _jsp_string2.length);
      
// Intranet DB
String _mysqlJdbcDriver = "com.mysql.jdbc.Driver";
String _urlLogin = "jdbc:mysql://10.2.1.247:3306/intranet";
String _userLogin = "intranet";
String _pwLogin = "tetris82";

// Futura DB
String _mssqlJdbcDriver = "com.microsoft.jdbc.sqlserver.SQLServerDriver";
String _urlFutura = "jdbc:microsoft:sqlserver://10.2.1.228:1433";
String _userFutura = "intranet";
String _pwFutura = "tetris";

// Uplod
String _uploadPath = "/var/tmp";
long _maxFileSize = 10*1024*1024;

// style image path
String _styleImgURL = "/image";

// Fault return invoice File URL
String _faultReturnInvoiceFileURL = "/image/Return";

// Memo \u00b0\u00fc\u00b7\u00c3 \u00ba\u00af\u00bc\u00f6
String _memoDataUrl = "/memo/upload";

// APESS SCM ID
String _apessID = "60171";

// Spec Sheet path
String _specSheetUrl = "/image/SPEC_SHEET";

// Spec Sheet upload path
String _specSheetUploadUrl = "/scan_spec_sheet";

// Sample Image Url
String _sampleIamgeUrl = "/image/SAMPLE_IMAGE";

// barcode file Image Url
String _barcodeFileUrl = "/image/Barcode";

// Invoice file path
String _invoiceFileUrl = "/order/inv_files";

// shipment file path
String _shipmentFileUrl = "/order/shipment_upload";

// Apess MU rate
double _MURate = 0.25;

// Ex-Factory Price Rate
double _EXRate = 0.04;


// Ex-Factory Price Rate for Apess2
double _EXRate2 = 0.04;

// Pronto DATA_AREA
//String _dataArea = "fft";
String _dataArea = "ffl";

// Pronto PIE Info
//String _pieIP = "10.2.1.226";
String _pieIP = "newffbpro.fastfuturebrands.com.au";
int _piePort = 7000;
//String _pieDataset = "apitest";
String _pieDataset = "apilive";

      out.write('\n');
      
String path = application.getRealPath(_invoiceFileUrl) + java.io.File.separator;

// Initialization
smart.initialize(pageContext);
smart.upload();

//myUpload.init(config);
smart.service(request,response);

// Upload
//Enumeration e = smart.getRequest().getParameterNames();

String filename = "";
com.jspsmart.upload.File upfile = smart.getFiles().getFile(0);

if(!upfile.isMissing()) {
   filename = upfile.getFileName();
   filename = scmid + "_" + filename ;
   upfile.saveAs(path + filename);
}

if ( filename.length() > 50 ) {
   out.println( " Max invoice file Characters are 50. Try again After Confirming  number of invoice file Characters!");
   return;
}

String invoiceno = smart.getRequest().getParameter("invoice_no").trim();
String invoice_date = smart.getRequest().getParameter("invoice_date");
//String rcnt = smart.getRequest().getParameter("pcnt");

//int row = Integer.parseInt(rcnt);
String[] seq          =  smart.getRequest().getParameterValues("seq");
String[] check_pono   =  smart.getRequest().getParameterValues("check_pono");
String[] a_style_no   =  smart.getRequest().getParameterValues("a_style_no");
String[] a_qty        =  smart.getRequest().getParameterValues("a_qty");
String[] a_price      =  smart.getRequest().getParameterValues("a_price");
String[] a_air_price  =  smart.getRequest().getParameterValues("a_air_price");
String[] disc_price   =  smart.getRequest().getParameterValues("disc_price");

Statement stmt = null;
Connection connScm = null;
MatrixDataSet matrix = null;
DataProcess dataProcess = null;
DBConnManager dbPool = null;
String sql  = "";
int iRet = 0;
String outS = "";

//SimpleDateFormat dd = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");   //import java.text.*
String update = DateUtil.getToday("yyyy.MM.dd HH:mm:ss");

try {

  matrix = new dbconn.MatrixDataSet();
  dataProcess = new DataProcess();
  dbPool = dbconn.DBConnManager.getInstance();
  connScm = dbPool.getConnection("intranet");

  sql = " select count(*) from invoice_01t " +
        " where invoice_no =  '" + invoiceno + "'  " +
        "  and  sup_id     =  '" + scmid + "' " ;

  //out.println(sql);
  iRet = dataProcess.RetrieveData(sql, matrix, connScm);

  int check_cnt= 0;

  if ( iRet > 0 ) {
    check_cnt   =  Integer.parseInt(matrix.getRowData(0).getData(0));
  }

  if (check_cnt > 0) {
    outS += "<td><font color= red >Duplicate Invoice number duplication. Your invoice number already issued. Please try again.</font><td>";
    throw new UserDefinedException("Invoice number duplication");
  }

  sql = "INSERT INTO invoice_01t( invoice_date, invoice_no, sup_id , file_name, updated ) " +
        " VALUES( " +
        "'" + invoice_date + "',"  +
        "'" + invoiceno   + "',"  +
        "'" + scmid        + "',"  +
        "'" + filename    + "',"  +
        "  sysdate )";

  connScm.setAutoCommit(false);
  stmt = connScm.createStatement();
  iRet = stmt.executeUpdate(sql);
  stmt.close();
  
  if (iRet > 0) {
    System.out.println("Invoice_01t insert Sucess : Qeyry = " + update + " ==> " +sql ) ;
  } else {
    throw new UserDefinedException("Invoice_01t insert ERROR : Qeyry = " + update + " ==> " +sql ) ;
  }

  for (int i = 0; i < check_pono.length; i++) {
    sql =  " INSERT INTO invoice_02t ( invoice_no, seq, po_no , style_no , qty, price , air_price, sup_id, updated, disc_price ) " +
           " VALUES( " +
           "'" + invoiceno + "',"  +
           "0,"  +
           "'" + check_pono[i]   + "',"  +
           "'" + a_style_no[i]   + "',"  +
           "'" + a_qty[i]   + "',"  +
           "'" + a_price[i]   + "',"  +
           "'" + a_air_price[i]   + "',"  +
           "'" + scmid        + "',"  +
           " sysdate, " +
           "'" + disc_price[i] + "') ";

    stmt = connScm.createStatement();
    iRet = stmt.executeUpdate(sql);

    if (iRet > 0 ) {
      System.out.println("Invoice_02t insert Sucess : Qeyry = " + update + " ==> " +sql ) ;
    } else {
      throw new UserDefinedException("Invoice_02t insert ERROR : Qeyry = " + update + " ==> " +sql) ;
    }
    
    // update div_status
    sql = " update  po_style_etc "
        + " set     div_status = '2' "
        + " where   po_no = '" + check_pono[i] + "' "
        + " and     nvl(div_status, '0') = '0' ";

    iRet = stmt.executeUpdate(sql);
    stmt.close();

    if (iRet != 1) {
      outS = "<td><font color= red >Sending invoice failed. Couldn't update div_status.</font><td>";
      throw new UserDefinedException("po_style_etc update ERROR : Qeyry = " + update + " ==> " +sql) ;
    }
  }

  outS += "<td> <font color=blue> Your invoice no " + invoiceno + " was sent successfully. Click the Done button! </font></td> " +
          "<td align=left ><A HREF='./invoice_confirm_search.jsp'><b> Done </b> </A></td> " ;

   connScm.commit();

} catch (UserDefinedException ue) {
  try { connScm.rollback(); } catch (Exception ex) {}

  System.out.println("Exception invoice_update : " + ue.getMessage());
} catch (Exception e) {
  try { connScm.rollback(); } catch (Exception ex) {}

  System.out.println("Exception invoice_update, Date : " + update + ", Query ==> " + sql);
  throw e;
} finally {
  if (stmt != null) {
    try { stmt.close(); } catch (Exception e) {}
  }

  if (connScm != null) {
    try { connScm.setAutoCommit(true); } catch (Exception e) {}
    dbPool.freeConnection("intranet", connScm);
  }
}

      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((outS));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
out.println(CopyRightLogo());

      out.write(_jsp_string5, 0, _jsp_string5.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("order/invoice_update.jsp"), 4894107128147650993L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("login_check.jsp"), 5313538553479869376L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("bottom_line.jsp"), 5941552803368297242L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("common/CommonVars.jsp"), 5055347195946766837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string3;
  private final static char []_jsp_string2;
  private final static char []_jsp_string5;
  private final static char []_jsp_string1;
  private final static char []_jsp_string4;
  private final static char []_jsp_string0;
  static {
    _jsp_string3 = "\n<HTML>\n<link href=\"/common/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\n<script language=JavaScript>\nfunction Back()\n{\n  history.back();\n}\n</script>\n<body leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\">\n<table width=\"840\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr><td>\n\n<table width=\"99%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\n<tr>\n  <td width=\"100%\" height=\"15\" colspan=\"2\"></td>\n</tr>\n<tr>\n  <td width=\"3%\"><img src=\"/img/title_icon.gif\"></td>\n  <td width=\"*\" class=\"left_title\">Result of invoices update</td>\n</tr>\n<tr>\n  <td width=\"100%\" height=\"2\" colspan=\"2\"><hr width=\"100%\"></td>\n</tr>\n<tr>\n  <td width=\"100%\" height=\"10\" colspan=\"2\"></td>\n</tr>\n</table>\n\n<TABLE WIDTH=640 BORDER=0 CELLSPACING=0 CELLPADDING=0 align='center'>\n<TR>\n".toCharArray();
    _jsp_string2 = "\n\n\n".toCharArray();
    _jsp_string5 = "\n</td></tr></table>\n</BODY>\n</HTML>\n".toCharArray();
    _jsp_string1 = "\n\n".toCharArray();
    _jsp_string4 = "\n</TR>\n</TABLE>\n".toCharArray();
    _jsp_string0 = "\n\n\n\n\n\n".toCharArray();
  }
}
