/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._order;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;
import dbconn.*;
import common.util.*;

public class _po_0detail__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;


  //-------------------------------------------
  // CopyRightLogo
  //
  //-------------------------------------------
  String CopyRightLogo()
  {
    String str;
    str = "<table width='99%' border='0' cellspacing='0' cellpadding='0' align='center'>";
    str += "<tr><td width='100%' height='2' align='center'>";
    str += "<HR width=100% size=2></td></tr>";
    str += "<tr><td width='100%' align='center'>";
    str += "<FONT size=2 >&copy;Copyright 2010 </font>";
    str += "<FONT size=2 color=green>Fast Future Brands Pty Ltd. All Rights Reserved.</FONT><BR>";
    str += "<FONT size=2> For more information,please contact</font> <FONT size=2 color=blue><A href='mailto:scm@ffb.net.au'>scm@ffb.net.au</A></FONT>";
    str += "</td></tr></table>";

    return (String)str;
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String scmid = "";
String scmnm = "";
String usertype = "";
String usergroup = "";
//String scmsubids = "";
String _adminid = "";
String _adminname = "";
String _admingroup = "";
String _apessid = "";
String _apessname = "";

try{
  scmid = (String) session.getAttribute("scmid");
  _adminid = (String) session.getAttribute("adminid");

  if( (scmid == null || scmid.length() == 0 || scmid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");

  _apessid = (String) session.getAttribute("apessid");
  _apessname = (String) session.getAttribute("apessname");

  scmnm = (String) session.getAttribute("scmnm");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  //scmsubids = (String) session.getAttribute("scmsubids");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/login_first.html");
  return;
}

      out.write('\n');
      
// Intranet DB
String _mysqlJdbcDriver = "com.mysql.jdbc.Driver";
String _urlLogin = "jdbc:mysql://10.2.1.247:3306/intranet";
String _userLogin = "intranet";
String _pwLogin = "tetris82";

// Futura DB
String _mssqlJdbcDriver = "com.microsoft.jdbc.sqlserver.SQLServerDriver";
String _urlFutura = "jdbc:microsoft:sqlserver://10.2.1.228:1433";
String _userFutura = "intranet";
String _pwFutura = "tetris";

// Uplod
String _uploadPath = "/var/tmp";
long _maxFileSize = 10*1024*1024;

// style image path
String _styleImgURL = "/image";

// Fault return invoice File URL
String _faultReturnInvoiceFileURL = "/image/Return";

// Memo \u00b0\u00fc\u00b7\u00c3 \u00ba\u00af\u00bc\u00f6
String _memoDataUrl = "/memo/upload";

// APESS SCM ID
String _apessID = "60171";

// Spec Sheet path
String _specSheetUrl = "/image/SPEC_SHEET";

// Spec Sheet upload path
String _specSheetUploadUrl = "/scan_spec_sheet";

// Sample Image Url
String _sampleIamgeUrl = "/image/SAMPLE_IMAGE";

// barcode file Image Url
String _barcodeFileUrl = "/image/Barcode";

// Invoice file path
String _invoiceFileUrl = "/order/inv_files";

// shipment file path
String _shipmentFileUrl = "/order/shipment_upload";

// Apess MU rate
double _MURate = 0.25;

// Ex-Factory Price Rate
double _EXRate = 0.04;


// Ex-Factory Price Rate for Apess2
double _EXRate2 = 0.04;

// Pronto DATA_AREA
//String _dataArea = "fft";
String _dataArea = "ffl";

// Pronto PIE Info
//String _pieIP = "10.2.1.226";
String _pieIP = "newffbpro.fastfuturebrands.com.au";
int _piePort = 7000;
//String _pieDataset = "apitest";
String _pieDataset = "apilive";

      out.write(_jsp_string1, 0, _jsp_string1.length);
      
String QTY_FORMAT = "###,##0";
String MONEY_FORMAT = "###,##0.00";
String MONEY_FORMAT2 = "#####0.00";
String imgUrl = "Image<br>Not Ready";

String fromUrl = request.getParameter("fromUrl");
String M = request.getParameter("M");
String po_no_selected = request.getParameter("po_no_selected");
String ag_orderby = request.getParameter("ag_orderby");
String ag_brand = request.getParameter("ag_brand");
String ag_buyer = request.getParameter("ag_buyer");
String ag_mr = request.getParameter("ag_mr");
String ag_invoice_no = request.getParameter("ag_invoice_no");
String ag_month = request.getParameter("ag_month");
String ag_year = request.getParameter("ag_year");
String ag_status = request.getParameter("ag_status");
String ag_po_no = request.getParameter("ag_po_no");
String ag_style_no = request.getParameter("ag_style_no");
String ag_supplier = request.getParameter("ag_supplier");
String ag_apess_only = request.getParameter("ag_apess_only");
String ag_from_date = request.getParameter("ag_from_date");
String ag_to_date = request.getParameter("ag_to_date");
String ag_date_type = request.getParameter("ag_date_type");

if (fromUrl == null) fromUrl = request.getHeader("Referer");
if (M == null) M = "";
if (po_no_selected == null) po_no_selected = "";
if (ag_orderby == null) ag_orderby = "";
if (ag_brand == null) ag_brand = "";
if (ag_buyer == null) ag_buyer = "";
if (ag_mr == null) ag_mr = "";
if (ag_invoice_no == null) ag_invoice_no = "";
if (ag_month == null) ag_month = "";
if (ag_year == null) ag_year = "";
if (ag_status == null) ag_status = "";
if (ag_po_no == null) ag_po_no = "";
if (ag_style_no == null) ag_style_no = "";
if (ag_supplier == null) ag_supplier = "";
if (ag_apess_only == null) ag_apess_only = "";
if (ag_from_date == null) ag_from_date = "";
if (ag_to_date == null) ag_to_date = "";
if (ag_date_type == null) ag_date_type = "";

String status = "";
String item_class = "";
String item_group = "";
String supplier_name = "";
String brand = "";
String style_no = "";
double currency_unit_price = 0.0d;
double ex_factory_price = 0.0d;
double discount_price = 0.0d;
double ex_dc_price = 0.0d;
String currency_type = "";
String buyer = "";
String supplier_item = "";
String season = "";
String order_type = "";
String trans_type = "";
String order_date = "";
String ex_factory_date = "";
String delivery_date = "";
String shipping_method = "";
double air_cost = 0.0d;
String fabric = "";
String receipt_text = "";
String item_text = "";
String inspector = "";
String inspector_name = "";
String inspect_date = "";
String ratio_group_desc = "";
String po_notes = "";
String spec_sheets = "";
String[] size_label = null;
String size_labels = "";
boolean isNullExFactoryPrice = false;
boolean isEditable = false;
double rrp = 0.0d;
double min_ex_factory_price = 0.0d;
double max_ex_factory_price = 0.0d;
String mrName = "";
double commission_rate = 0.0d;
String orderControlYn = "";
String muYn = "";

Connection connPronto = null;
Connection connScm = null;
dbconn.DBConnManager dbPool = null;
dbconn.MatrixDataSet matrix = null;
dbconn.MatrixDataSet matrix2 = null;
dbconn.MatrixDataSet matrix3 = null;
dbconn.MatrixDataSet matrix4 = null;
dbconn.MatrixDataSet matrix5 = null;
dbconn.DataProcess dataProcess = null;
String sql = "";
int iRet = 0;
int iRet2 = 0;
int iRet3 = 0;
int iRet4 = 0;
int iRet5 = 0;
String outS = "";

// po detail query
sql = " select  a.po_order_status, "
    + "         b.xspo_stock_group, "
    + "         c.cr_shortname, "
    + "         d.shm_description, "
    + "         b.xspo_style, "
    + "         b.vendor_price, "
    + "         g.ex_factory_price, "
    + "         b.xspo_discount, "
    + "         decode(a.po_currency_code, ' ', 'AUD', a.po_currency_code), "
    + "         nvl(e.sys_description, a.po_user_name), "
    + "         trim(b.sup_stock_code), "
    + "         b.season_and_seq, "
    + "         b.xspo_order_type, "
    + "         b.xspo_trans_type, "
    + "         to_char(a.po_order_date, 'dd/mm/yyyy'), "
    + "         decode(to_char(b.ex_factory_date, 'yyyy'), '1900', '', to_char(b.ex_factory_date, 'dd/mm/yyyy')), "
    + "         to_char(a.po_arrival_date, 'dd/mm/yyyy'), "
    + "         c.cr_supplier_grp, "
    + "         b.xspo_air_cost, "
    + "         trim(nvl(f.sys_description, b.xspo_fabric)), "
    + "         b.receipt_text, "
    + "         b.xspo_item_text||b.xspo_item_text_2, "
    + "         g.inspector, "
    + "         h.name, "
    + "         to_char(g.inspect_date, 'dd/mm/yyyy'), "
    + "         nvl(i.srg_desc, b.ratio_group_code), "
    + "         b.xspo_rrp, "
    + "         j.adminname, "
    + "         nvl(m.rate, 0), "
    + "         l.order_control_yn, "
    + "         l.mu_yn "
    + " from    por5mf4 a "
    + "         inner join xstpu22 b "
    + "           on a.po_order_no = b.xspo_po_order_no "
    + "           and a.backorder_flag = b.backorder_flag "
    + "         inner join cre5mfi c "
    + "           on a.cre_accountcode = c.cre_accountcode "
    + "         left outer join "
    + "         ( "
    + "           select z.stock_group, y.shm_description "
    + "           from   stkhierachymst0 y "
    + "                  inner join stkhiertree3 z "
    + "                    on y.shm_code = z.sht_category "
    + "                    and y.shm_type = 3 "
    + "         ) d "
    + "           on b.xspo_stock_group = d.stock_group "
    + "         left outer join sys5tbl5 e "
    + "           on a.po_user_name = e.sys_tbl_code "
    + "           and e.sys_tbl_type = 'RR' "
    + "         left outer join sys5tbl5 f "
    + "           on b.xspo_fabric = f.sys_tbl_code "
    + "           and f.sys_tbl_type = 'SY' "
    + "         left outer join po_style_etc@scm g "
    + "           on a.po_order_no = g.po_no "
    + "         left outer join vg_inspector@scm h "
    + "           on g.inspector = h.code "
    + "         left outer join scsratiogroup0 i "
    + "           on b.ratio_group_code = i.sgsr_group_code "
    + "         left outer join admin_01t@scm j "
    + "           on g.mr = j.adminid "
    + "         left outer join nad5mfa k "
    + "           on c.cre_accountcode = k.accountcode "
    + "           and k.na_type = 'C' "
    + "         left outer join user_supplier_02t@scm l "
    + "           on k.na_country_code = l.supplier_class "
    + "         left outer join supplier_commission@scm m "
    + "           on l.supplier_class = m.supplier_class "
    + "           and a.po_order_date between m.from_date and m.to_date "
    + " where   a.po_order_no = " + po_no_selected
    + " and     a.backorder_flag = ' ' ";
//out.println(sql); if (true) return;

try {

  dbPool = DBConnManager.getInstance();
  connPronto = dbPool.getConnection("pronto");
  matrix = new dbconn.MatrixDataSet();
  matrix2 = new dbconn.MatrixDataSet();
  matrix3 = new dbconn.MatrixDataSet();
  matrix4 = new dbconn.MatrixDataSet();
  dataProcess = new dbconn.DataProcess();

  // po detail
  iRet = dataProcess.RetrieveData(sql, matrix, connPronto);

  if (iRet > 0) {
    // po notes
    sql = " select  xsn_note_text "
        + " from    xsstnot0 "
        + " where   xsn_po_order_no = " + po_no_selected
        + " and     backorder_flag = ' ' "
        + " and     xsn_note_type = 'SN' "
        + " order by xsn_note_seq ";

    iRet2 = dataProcess.RetrieveData(sql, matrix2, connPronto);

    // po spec sheets
    //sql = " select  distinct b.ql_code, substr(b.ql_path, instr(b.ql_path, '\\', -1)+1), "
    sql = " select  distinct "
        + "         substr(b.ql_path, instr(b.ql_path, '\\', -1, 2)+1, instr(b.ql_path, '\\', -1)-instr(b.ql_path, '\\', -1, 2)-1), "
        + "         substr(b.ql_path, instr(b.ql_path, '\\', -1)+1), "
        + "         substr(substr(ql_description, instr(ql_description, ' ') + 1), 5) "
        + "         || substr(substr(b.ql_description, instr(b.ql_description, ' ') + 1), 3, 2) "
        + "         || substr(substr(b.ql_description, instr(b.ql_description, ' ') + 1), 1, 2) spec_date "
        + " from    xstpu22 a "
        + "         inner join qlinks0 b "
        + "           on a.xspo_style = substr(b.ql_description, 1, instr(b.ql_description, ' ') - 1) "
        + " where   a.xspo_po_order_no = " + po_no_selected
        + " and     a.backorder_flag = ' ' "
        + " and     b.ql_data_area = '" + _dataArea + "' "
        + " and     b.ql_table = 'xspo-style-purchase-order' "
        + " order by spec_date ";

    iRet3 = dataProcess.RetrieveData(sql, matrix3, connPronto);

    // po lines
    sql = " select  trim(a.supplier_colour), "
        + "         nvl(b.sys_description, a.xsca_colour), "
        + "         fnGetRatioLabel(c.ratio_group_code, a.xsca_ratio), "
        + "         a.xsca_total_qty, "
        + "         a.xsca_sqty_1, "
        + "         a.xsca_sqty_2, "
        + "         a.xsca_sqty_3, "
        + "         a.xsca_sqty_4, "
        + "         a.xsca_sqty_5, "
        + "         a.xsca_sqty_6 "
        + " from    xstcolal1 a "
        + "         left outer join sys5tbl5 b "
        + "           on a.xsca_colour = b.sys_tbl_code "
        + "           and b.sys_tbl_type = 'CO' "
        + "         inner join xstpu22 c "
        + "           on a.xsca_po_order_no = c.xspo_po_order_no "
        + "           and a.backorder_flag = c.backorder_flag "
        + " where   a.xsca_po_order_no = " + po_no_selected
        + " and     a.backorder_flag = ' ' ";

    iRet4 = dataProcess.RetrieveData(sql, matrix4, connPronto);
  
    // read authority for update ex factory price
    if (_apessid != null) {
      sql = " select  auth_userid "
          + " from    user_auth "
          + " where   auth_code = 'U_EFP' "
          + " and     auth_userid = '" + _apessid + "' "
          + " and     auth_valid = 'Y' ";

      connScm = dbPool.getConnection("intranet");
      matrix5 = new dbconn.MatrixDataSet();
      iRet5 = dataProcess.RetrieveData(sql, matrix5, connScm);

      if (iRet5 > 0) isEditable = true;
    }
  }

  connPronto.commit();

} catch (Exception e) {
  if (connPronto != null) {
    try { connPronto.rollback(); } catch (Exception ex) {}
  }

  System.out.println("Exception in po_detail : " + e.getMessage());
  throw e;
} finally {
  if (connPronto != null) {
    dbPool.freeConnection("pronto", connPronto);
  }

  if (connScm != null) {
    dbPool.freeConnection("intranet", connScm);
  }
}

// set po details
if (iRet > 0) {
  int j = 0;
  status = matrix.getRowData(0).getData(j++);
  item_group = matrix.getRowData(0).getData(j++);
  supplier_name = matrix.getRowData(0).getData(j++);
  brand = matrix.getRowData(0).getData(j++);
  style_no = matrix.getRowData(0).getData(j++);
  currency_unit_price = Double.parseDouble(matrix.getRowData(0).getData(j++));
  
  String org_ex_factory_price = matrix.getRowData(0).getData(j++);

  discount_price = Double.parseDouble(matrix.getRowData(0).getData(j++));
  currency_type = matrix.getRowData(0).getData(j++);
  buyer = matrix.getRowData(0).getData(j++);
  supplier_item = matrix.getRowData(0).getData(j++);
  season = matrix.getRowData(0).getData(j++);
  order_type = matrix.getRowData(0).getData(j++);
  trans_type = matrix.getRowData(0).getData(j++);
  order_date = matrix.getRowData(0).getData(j++);
  ex_factory_date = matrix.getRowData(0).getData(j++);
  delivery_date = matrix.getRowData(0).getData(j++);
  shipping_method = matrix.getRowData(0).getData(j++);
  air_cost = Double.parseDouble(matrix.getRowData(0).getData(j++));
  fabric = matrix.getRowData(0).getData(j++);
  receipt_text = matrix.getRowData(0).getData(j++);
  item_text = matrix.getRowData(0).getData(j++);
  inspector = matrix.getRowData(0).getData(j++);
  inspector_name = matrix.getRowData(0).getData(j++);
  inspect_date = matrix.getRowData(0).getData(j++);
  ratio_group_desc = matrix.getRowData(0).getData(j++);
  rrp = Double.parseDouble(matrix.getRowData(0).getData(j++));
  mrName = matrix.getRowData(0).getData(j++);
  commission_rate = Double.parseDouble(matrix.getRowData(0).getData(j++));
  orderControlYn = matrix.getRowData(0).getData(j++);
  muYn = matrix.getRowData(0).getData(j++);

  item_class = item_group.substring(0, 1);

  // re-calculate price to include MU
  String tmp_order_date = order_date.substring(6) + order_date.substring(3, 5) + order_date.substring(0, 2);

/*
  if (currency_unit_price > 0.0d && supplier_name.toUpperCase().startsWith("APESS(")
      && tmp_order_date.compareTo("20090101") >= 0 && tmp_order_date.compareTo("20090630") <= 0) {
    if ((usertype.equals("P") && usergroup.equals("S")) 
        || (usertype.equals("P") && usergroup.equals("A") && M.equals("Y"))) {
      //currency_unit_price *= (1.0d + _MURate);
      currency_unit_price = Math.round(currency_unit_price*(1.0d + _MURate)*100.0d)/100.0d;
    }
  }
*/
  // 2010.12.17 for audit reason ... from Joy
  if (currency_unit_price > 0.0d && muYn.equals("Y")
      && tmp_order_date.compareTo("20090101") >= 0 && tmp_order_date.compareTo("20090630") <= 0) {
    //if (usertype.startsWith("C") && (usergroup.equals("S") || (usergroup.equals("A") && M.equals("Y")))) {
    if ( (usertype.startsWith("C") && (usergroup.equals("S") || (usergroup.equals("A") && M.equals("Y"))))
         || (_adminid != null && _adminid.equals("2000")) ) {
      currency_unit_price = Math.round(currency_unit_price*(1.0d + _MURate)*100.0d)/100.0d;
    }
  }

  // ex_factory_price : APESS suppplier only
  // if ex_factory_price exists use that value
  // else
  //   before 1 July ex_factory_price = unit_price
  //   from 1 July ex_factory_price = unit_price/_EXRate
  // rate change from 20100531
  // rate : APESS1 and Apess2 -> 0.05
/*
  if (supplier_name.toUpperCase().startsWith("APESS(") || supplier_name.toUpperCase().startsWith("APESS2(")) {
    String tmp_start_date = "20101108";
    double tmp_rate = _EXRate;
  
    if (tmp_order_date.compareTo(tmp_start_date) < 0) {
      tmp_start_date = "20100531";
      tmp_rate = 0.05d;

      if (tmp_order_date.compareTo(tmp_start_date) < 0) {
        tmp_start_date = "20090701";
        tmp_rate = 0.15d;
  
        if (supplier_name.toUpperCase().startsWith("APESS2(")) {
          tmp_start_date = "20100315";
          tmp_rate = 0.07d;
        }
    
        if (tmp_order_date.compareTo(tmp_start_date) < 0) {
          tmp_rate = 0.0d;
        }
      }
    }

    if (!org_ex_factory_price.equals("")) {
      ex_factory_price = Double.parseDouble(org_ex_factory_price);
    } else {
      isNullExFactoryPrice = true;
      //ex_factory_price = currency_unit_price/(1.0d + tmp_rate);
      ex_factory_price = Math.round(currency_unit_price*100.0d/(1.0d + tmp_rate))/100.0d;
    }

    //if (tmp_rate == 0.0d || status.compareTo("40") < 0) {
    if (tmp_rate == 0.0d) {
      isEditable = false;
    }

    if (isEditable) {
      max_ex_factory_price = currency_unit_price;
      min_ex_factory_price = Math.round((currency_unit_price/(1.0d + tmp_rate))*100.0d)/100.0d;
    }

    // calculate ex_dc_price
    if (discount_price > 0.0d && ex_factory_price > 0.0d) {
      tmp_rate = Math.round((currency_unit_price/ex_factory_price - 1)*100.0d)/100.0d;
      ex_dc_price = Math.round(discount_price*100.0d/(1.0d + tmp_rate))/100.0d;
    }
  }
*/
  if (orderControlYn.equals("Y")) {
    if (!org_ex_factory_price.equals("")) {
      ex_factory_price = Double.parseDouble(org_ex_factory_price);
    } else {
      isNullExFactoryPrice = true;
      ex_factory_price = Math.round(currency_unit_price*100.0d/(1.0d + commission_rate))/100.0d;
    }

    if (commission_rate == 0.0d) {
      isEditable = false;
    }

    if (isEditable) {
      max_ex_factory_price = currency_unit_price;
      min_ex_factory_price = Math.round((currency_unit_price/(1.0d + commission_rate))*100.0d)/100.0d;
    }

    // calculate ex_dc_price
    if (discount_price > 0.0d && ex_factory_price > 0.0d) {
      double tmp_rate = Math.round((currency_unit_price/ex_factory_price - 1)*100.0d)/100.0d;
      ex_dc_price = Math.round(discount_price*100.0d/(1.0d + tmp_rate))/100.0d;
    }
  }

  // set po size labels
  size_label = ratio_group_desc.split(":");

  for (int i = 0; i < size_label.length; i++) {
    size_labels += "<td width='7%'>" + size_label[i] + "</td>";
  }

  for (int i = size_label.length; i < 6; i++) {
    size_labels += "<td width='7%'>&nbsp;</td>";
  }

  // set po notes
  for (int i = 0; i < iRet2; i++) {
    po_notes += matrix2.getRowData(i).getData(0);
  }
  
  // set po spec sheets
  for (int i = 0; i < iRet3; i++) {
    int k = 0;
    String spec_brand = matrix3.getRowData(i).getData(k++);
    String spec_file = matrix3.getRowData(i).getData(k++);
    if (i > 0) spec_sheets += ", ";
    spec_sheets += "<a href=\"javascript:fnDownload('" + spec_brand + "/" + spec_file + "');\">" + spec_file + "</a>";
  }

  // set po lines
  int total_size_1 = 0;
  int total_size_2 = 0;
  int total_size_3 = 0;
  int total_size_4 = 0;
  int total_size_5 = 0;
  int total_size_6 = 0;
  int total_pack = 0;
  int grand_total = 0;

  for (int i = 0; i < iRet4; i++) {
    int k = 0;
    String sp_colour = matrix4.getRowData(i).getData(k++);
    String ffb_colour = matrix4.getRowData(i).getData(k++);
    String ratio_desc = matrix4.getRowData(i).getData(k++);
    int total_qty = Integer.parseInt(matrix4.getRowData(i).getData(k++));
    int size_1 = Integer.parseInt(matrix4.getRowData(i).getData(k++));
    int size_2 = Integer.parseInt(matrix4.getRowData(i).getData(k++));
    int size_3 = Integer.parseInt(matrix4.getRowData(i).getData(k++));
    int size_4 = Integer.parseInt(matrix4.getRowData(i).getData(k++));
    int size_5 = Integer.parseInt(matrix4.getRowData(i).getData(k++));
    int size_6 = Integer.parseInt(matrix4.getRowData(i).getData(k++));

    // set po ratio labels and pack size
    String[] ratio_label = null;
    int pack_size = 0;
    ratio_label = ratio_desc.split(":");

    for (int n = 0; n < ratio_label.length; n++) {
      pack_size += Integer.parseInt(ratio_label[n]);
    }

    int pack_qty = 0;
    if (pack_size != 0) {
      pack_qty = total_qty/pack_size;
    }

    total_size_1 += size_1;
    total_size_2 += size_2;
    total_size_3 += size_3;
    total_size_4 += size_4;
    total_size_5 += size_5;
    total_size_6 += size_6;
    total_pack += pack_qty;
    grand_total += total_qty;

    outS += "<tr align='right' class='table_list'>"
          + "  <td align='left'>" + (sp_colour.equals("") ? "&nbsp;" : sp_colour) + "</td>"
          + "  <td align='left'>" + ffb_colour + "</td>"
          + "  <td align='center'>" + ratio_desc + "</td>"
          + "  <td>" + StringUtil.formatNumber(size_1, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(size_2, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(size_3, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(size_4, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(size_5, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(size_6, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(pack_qty, QTY_FORMAT) + "</td>"
          + "  <td>" + StringUtil.formatNumber(total_qty, QTY_FORMAT) + "</td>"
          + "</tr>";
  }

  // print total qty
  outS += "<tr align='right' class='table_tail'>"
        + "  <td align='center' colspan='3'>GRAND TOTAL</td>"
        + "  <td>" + StringUtil.formatNumber(total_size_1, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(total_size_2, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(total_size_3, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(total_size_4, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(total_size_5, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(total_size_6, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(total_pack, QTY_FORMAT) + "</td>"
        + "  <td>" + StringUtil.formatNumber(grand_total, QTY_FORMAT) + "</td>"
        + "</tr>";
}

// set item imagae
File imgFile = new File(application.getRealPath(_styleImgURL) + File.separator + style_no + ".jpg");
if (imgFile.exists()) {
  imgUrl = "<img src='" + _styleImgURL + "/" + style_no + ".jpg' width='110' height='169'>";
}

      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.print(( fromUrl ));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      
if (isEditable) {

      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print(( min_ex_factory_price ));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print(( max_ex_factory_price ));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      
}

      out.write(_jsp_string7, 0, _jsp_string7.length);
      
//if (supplier_name.toUpperCase().startsWith("APESS(") || supplier_name.toUpperCase().startsWith("APESS2(")) {
if (orderControlYn.equals("Y")) {

      out.write(_jsp_string8, 0, _jsp_string8.length);
      
}

      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print(( orderControlYn.equals("Y") ? "oncontextmenu='return false' ondragstart='return false' onselectstart='return false'" : "" ));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print(( status.equals("25") ? "Pre-" : "" ));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      out.print(( M.equals("Y") ? "+" : "" ));
      out.write(_jsp_string12, 0, _jsp_string12.length);
      
if (status.equals("25")) {

      out.write(_jsp_string13, 0, _jsp_string13.length);
      
}

      out.write(_jsp_string14, 0, _jsp_string14.length);
      out.print(( fromUrl ));
      out.write(_jsp_string15, 0, _jsp_string15.length);
      out.print(( M ));
      out.write(_jsp_string16, 0, _jsp_string16.length);
      out.print(( po_no_selected ));
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print(( ag_brand ));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print(( ag_buyer ));
      out.write(_jsp_string19, 0, _jsp_string19.length);
      out.print(( ag_mr ));
      out.write(_jsp_string20, 0, _jsp_string20.length);
      out.print(( ag_invoice_no ));
      out.write(_jsp_string21, 0, _jsp_string21.length);
      out.print(( ag_orderby ));
      out.write(_jsp_string22, 0, _jsp_string22.length);
      out.print(( ag_month ));
      out.write(_jsp_string23, 0, _jsp_string23.length);
      out.print(( ag_year ));
      out.write(_jsp_string24, 0, _jsp_string24.length);
      out.print(( ag_status ));
      out.write(_jsp_string25, 0, _jsp_string25.length);
      out.print(( ag_po_no ));
      out.write(_jsp_string26, 0, _jsp_string26.length);
      out.print(( ag_style_no ));
      out.write(_jsp_string27, 0, _jsp_string27.length);
      out.print(( ag_supplier ));
      out.write(_jsp_string28, 0, _jsp_string28.length);
      out.print(( ag_apess_only ));
      out.write(_jsp_string29, 0, _jsp_string29.length);
      out.print(( ag_from_date ));
      out.write(_jsp_string30, 0, _jsp_string30.length);
      out.print(( ag_to_date ));
      out.write(_jsp_string31, 0, _jsp_string31.length);
      out.print(( ag_date_type ));
      out.write(_jsp_string32, 0, _jsp_string32.length);
      out.print(( po_no_selected ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( brand ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( style_no ));
      out.write(_jsp_string34, 0, _jsp_string34.length);
      out.print(( supplier_name ));
      out.write(_jsp_string35, 0, _jsp_string35.length);
      
//if (supplier_name.toUpperCase().startsWith("APESS(") || supplier_name.toUpperCase().startsWith("APESS2(")) {
if (orderControlYn.equals("Y")) {

      out.write(_jsp_string36, 0, _jsp_string36.length);
      
  //if (usertype.equals("P")) {
  if (usertype.startsWith("C")) {

      out.write(_jsp_string37, 0, _jsp_string37.length);
      
  } else {

      out.write(_jsp_string38, 0, _jsp_string38.length);
      
  }

      out.write(_jsp_string39, 0, _jsp_string39.length);
      out.print(( item_class ));
      out.write(_jsp_string40, 0, _jsp_string40.length);
      out.print(( item_group ));
      out.write(_jsp_string40, 0, _jsp_string40.length);
      out.print(( currency_unit_price > 0.0d ? StringUtil.formatNumber(currency_unit_price, MONEY_FORMAT) : "TBA" ));
      out.write(_jsp_string41, 0, _jsp_string41.length);
      out.print(( currency_type ));
      out.write(_jsp_string42, 0, _jsp_string42.length);
      
  if (isEditable) {

      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print(( ex_factory_price > 0.0d ? StringUtil.formatNumber(ex_factory_price, MONEY_FORMAT2) : "TBA" ));
      out.write(_jsp_string44, 0, _jsp_string44.length);
      out.print(( !isNullExFactoryPrice ? "style='color:blue;'" : "" ));
      out.write(_jsp_string45, 0, _jsp_string45.length);
      out.print(( currency_type ));
      out.write(_jsp_string42, 0, _jsp_string42.length);
      
  } else {

      out.write(_jsp_string46, 0, _jsp_string46.length);
      out.print(( !isNullExFactoryPrice ? "style='color:blue;'" : "" ));
      out.write('>');
      out.print(( ex_factory_price > 0.0d ? StringUtil.formatNumber(ex_factory_price, MONEY_FORMAT) : "TBA" ));
      out.write(_jsp_string47, 0, _jsp_string47.length);
      out.print(( currency_type ));
      out.write(_jsp_string42, 0, _jsp_string42.length);
      
  }

  //if (usertype.equals("P")) {
  if (usertype.startsWith("C")) {

      out.write(_jsp_string48, 0, _jsp_string48.length);
      out.print(( ex_dc_price > 0.0d ? StringUtil.formatNumber(ex_dc_price, MONEY_FORMAT) + " (" + currency_type + ")" : "&nbsp;" ));
      out.write(_jsp_string49, 0, _jsp_string49.length);
      
  } else {

      out.write(_jsp_string48, 0, _jsp_string48.length);
      out.print(( discount_price > 0.0d ? StringUtil.formatNumber(discount_price, MONEY_FORMAT) + " (" + currency_type + ")" : "&nbsp;" ));
      out.write(_jsp_string49, 0, _jsp_string49.length);
      
  }

      out.write(_jsp_string50, 0, _jsp_string50.length);
      
} else {

      out.write(_jsp_string51, 0, _jsp_string51.length);
      out.print(( item_class ));
      out.write(_jsp_string40, 0, _jsp_string40.length);
      out.print(( item_group ));
      out.write(_jsp_string40, 0, _jsp_string40.length);
      out.print(( currency_unit_price > 0.0d ? StringUtil.formatNumber(currency_unit_price, MONEY_FORMAT) : "TBA" ));
      out.write(_jsp_string41, 0, _jsp_string41.length);
      out.print(( currency_type ));
      out.write(_jsp_string52, 0, _jsp_string52.length);
      out.print(( discount_price > 0.0d ? StringUtil.formatNumber(discount_price, MONEY_FORMAT) + "(" + currency_type + ")" : "&nbsp;" ));
      out.write(_jsp_string53, 0, _jsp_string53.length);
      
}

      out.write(_jsp_string54, 0, _jsp_string54.length);
      out.print(( buyer ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( supplier_item.equals("") ? "&nbsp;" : supplier_item ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( season ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( order_type ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( trans_type ));
      out.write(_jsp_string55, 0, _jsp_string55.length);
      out.print(( order_date ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( ex_factory_date.equals("") ? "&nbsp;" : ex_factory_date ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( delivery_date ));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print(( shipping_method ));
      out.write(_jsp_string56, 0, _jsp_string56.length);
      out.print(( StringUtil.formatNumber(air_cost, MONEY_FORMAT) ));
      out.write(_jsp_string57, 0, _jsp_string57.length);
      out.print(( orderControlYn.equals("Y") ? "2" : "4" ));
      out.write(_jsp_string58, 0, _jsp_string58.length);
      out.print(( fabric.equals("") ? "&nbsp;" : fabric ));
      out.write(_jsp_string49, 0, _jsp_string49.length);
      
//if (supplier_name.toUpperCase().startsWith("APESS(") || supplier_name.toUpperCase().startsWith("APESS2(")) {
if (orderControlYn.equals("Y")) {

      out.write(_jsp_string59, 0, _jsp_string59.length);
      out.print(( StringUtil.formatNumber(rrp, MONEY_FORMAT) ));
      out.write(_jsp_string49, 0, _jsp_string49.length);
      
}

      out.write(_jsp_string60, 0, _jsp_string60.length);
      out.print(( orderControlYn.equals("Y") ? "2" : "4" ));
      out.write(_jsp_string58, 0, _jsp_string58.length);
      out.print(( receipt_text ));
      out.write(_jsp_string49, 0, _jsp_string49.length);
      
//if (supplier_name.toUpperCase().startsWith("APESS(") || supplier_name.toUpperCase().startsWith("APESS2(")) {
if (orderControlYn.equals("Y")) {

      out.write(_jsp_string61, 0, _jsp_string61.length);
      out.print(( mrName ));
      out.write(_jsp_string62, 0, _jsp_string62.length);
      
}

      out.write(_jsp_string63, 0, _jsp_string63.length);
      out.print(( item_text ));
      out.write(_jsp_string35, 0, _jsp_string35.length);
      
//if (_adminid != null || usertype.equals("P")) {
if (_adminid != null || usertype.startsWith("C")) {

      out.write(_jsp_string64, 0, _jsp_string64.length);
      out.print(( inspector + (inspector_name.equals("") ? "&nbsp;" : "-") + inspector_name ));
      out.write(_jsp_string65, 0, _jsp_string65.length);
      out.print(( inspect_date.equals("") ? "&nbsp;" : inspect_date ));
      out.write(_jsp_string35, 0, _jsp_string35.length);
      
}

      out.write(_jsp_string66, 0, _jsp_string66.length);
      out.print(( spec_sheets ));
      out.write(_jsp_string67, 0, _jsp_string67.length);
      out.print(( imgUrl ));
      out.write(_jsp_string68, 0, _jsp_string68.length);
      out.print(( po_notes ));
      out.write(_jsp_string69, 0, _jsp_string69.length);
      out.print(( size_labels ));
      out.write(_jsp_string70, 0, _jsp_string70.length);
      out.print(( outS ));
      out.write(_jsp_string71, 0, _jsp_string71.length);
      
//if (supplier_name.toUpperCase().startsWith("APESS(") || supplier_name.toUpperCase().startsWith("APESS2(")) {
if (orderControlYn.equals("Y")) {

      out.write(_jsp_string72, 0, _jsp_string72.length);
      
}

      out.write(_jsp_string73, 0, _jsp_string73.length);
       if (_adminid == null || !_adminid.equals("2000")) { 
      out.write(_jsp_string74, 0, _jsp_string74.length);
       } 
      out.write(_jsp_string75, 0, _jsp_string75.length);
      out.print(( _specSheetUrl ));
      out.write(_jsp_string76, 0, _jsp_string76.length);
      
out.println(CopyRightLogo());

      out.write(_jsp_string77, 0, _jsp_string77.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("order/po_detail.jsp"), -6671533087002932219L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("login_check.jsp"), 5313538553479869376L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("common/CommonVars.jsp"), 5055347195946766837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("bottom_line.jsp"), 5941552803368297242L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string38;
  private final static char []_jsp_string76;
  private final static char []_jsp_string41;
  private final static char []_jsp_string16;
  private final static char []_jsp_string63;
  private final static char []_jsp_string48;
  private final static char []_jsp_string73;
  private final static char []_jsp_string36;
  private final static char []_jsp_string55;
  private final static char []_jsp_string23;
  private final static char []_jsp_string58;
  private final static char []_jsp_string13;
  private final static char []_jsp_string7;
  private final static char []_jsp_string31;
  private final static char []_jsp_string45;
  private final static char []_jsp_string5;
  private final static char []_jsp_string19;
  private final static char []_jsp_string11;
  private final static char []_jsp_string17;
  private final static char []_jsp_string3;
  private final static char []_jsp_string47;
  private final static char []_jsp_string65;
  private final static char []_jsp_string46;
  private final static char []_jsp_string34;
  private final static char []_jsp_string27;
  private final static char []_jsp_string50;
  private final static char []_jsp_string28;
  private final static char []_jsp_string2;
  private final static char []_jsp_string64;
  private final static char []_jsp_string26;
  private final static char []_jsp_string69;
  private final static char []_jsp_string66;
  private final static char []_jsp_string15;
  private final static char []_jsp_string75;
  private final static char []_jsp_string61;
  private final static char []_jsp_string68;
  private final static char []_jsp_string33;
  private final static char []_jsp_string1;
  private final static char []_jsp_string4;
  private final static char []_jsp_string67;
  private final static char []_jsp_string72;
  private final static char []_jsp_string54;
  private final static char []_jsp_string9;
  private final static char []_jsp_string40;
  private final static char []_jsp_string59;
  private final static char []_jsp_string32;
  private final static char []_jsp_string25;
  private final static char []_jsp_string57;
  private final static char []_jsp_string44;
  private final static char []_jsp_string35;
  private final static char []_jsp_string8;
  private final static char []_jsp_string14;
  private final static char []_jsp_string29;
  private final static char []_jsp_string42;
  private final static char []_jsp_string37;
  private final static char []_jsp_string52;
  private final static char []_jsp_string74;
  private final static char []_jsp_string51;
  private final static char []_jsp_string22;
  private final static char []_jsp_string43;
  private final static char []_jsp_string0;
  private final static char []_jsp_string20;
  private final static char []_jsp_string24;
  private final static char []_jsp_string18;
  private final static char []_jsp_string6;
  private final static char []_jsp_string39;
  private final static char []_jsp_string70;
  private final static char []_jsp_string30;
  private final static char []_jsp_string53;
  private final static char []_jsp_string62;
  private final static char []_jsp_string60;
  private final static char []_jsp_string71;
  private final static char []_jsp_string49;
  private final static char []_jsp_string56;
  private final static char []_jsp_string10;
  private final static char []_jsp_string12;
  private final static char []_jsp_string77;
  private final static char []_jsp_string21;
  static {
    _jsp_string38 = "\n    <td width='20%'>DISCOUNT PRICE</td>\n".toCharArray();
    _jsp_string76 = "'>\n<input type='hidden' name='attachFile'>\n<input type='hidden' name='attachRealFile'>\n</form>\n</table>\n".toCharArray();
    _jsp_string41 = " (".toCharArray();
    _jsp_string16 = "'>\n<input type='hidden' name='po_no_selected' value='".toCharArray();
    _jsp_string63 = "\n</tr>\n<tr>\n  <td class='table_header'>ITEM TEXT</td>\n  <td colspan='4' class='table_list'>".toCharArray();
    _jsp_string48 = "\n    <td>".toCharArray();
    _jsp_string73 = "\n  </td>\n</tr>\n</table>\n<table width='100%' border='0' cellspacing='0' cellpadding='0'>\n<tr>\n  <td width='100%' height='10'></td>\n</tr>\n</table>\n<table width='650' border='0' cellspacing='0' cellpadding='0' align='center'>\n<tr>\n  <td width='100%' align='center'>\n    ".toCharArray();
    _jsp_string36 = "\n  <tr class='table_header'>\n    <td>ITEM CLASS</td>\n    <td>ITEM GROUP</td>\n    <td>APESS PRICE</td>\n    <td width='20%'>EX-FACTORY PRICE</td>\n".toCharArray();
    _jsp_string55 = "</td>\n</tr>\n<tr class='table_header'>\n  <td>ORDER DATE</td>\n  <td>SHIP DATE</td>\n  <td>*DELIVERY DATE</td>\n  <td>SHIPPING METHOD</td>\n  <td>AIR COST</td>\n</tr>\n<tr class='table_list_center'>\n  <td>".toCharArray();
    _jsp_string23 = "'>\n<input type='hidden' name='ag_year' value='".toCharArray();
    _jsp_string58 = "' class='table_list'>".toCharArray();
    _jsp_string13 = "\n<table width='650' border='1' bordercolor='black' cellspacing='0' align='center'>\n<tr>\n  <td width='100%' class='font_small_2'>** Please note..\n    <ul>\n      <li>Please review all order details and update in the status to 'Supplier Confirmed' in [PO Confirmation] section of SCM.\n      <li>All details indicated on the Pro former Purchase Order sheet is NOT final. Can be cancelled on buyer's demand.\n      <li>Official purchase order sheet can be found and printed through the [PO History] menu upon confirmation of the Pro former Purchase order sheet.</li>\n    </ul>\n  </td>\n</tr>\n</table>\n<table width='100%' border='0' cellspacing='0' cellpadding='0'>\n<tr>\n  <td width='100%' height='10'></td>\n</tr>\n</table>\n".toCharArray();
    _jsp_string7 = "\n</script>\n</head>\n".toCharArray();
    _jsp_string31 = "'>\n<input type='hidden' name='ag_date_type' value='".toCharArray();
    _jsp_string45 = ">\n      <input type='button' value='U' onclick='fnUpdate(this.form);'> (".toCharArray();
    _jsp_string5 = ";\n    var max_price = ".toCharArray();
    _jsp_string19 = "'>\n<input type='hidden' name='ag_mr' value='".toCharArray();
    _jsp_string11 = "Purchase Order Detail".toCharArray();
    _jsp_string17 = "'>\n<input type='hidden' name='ag_brand' value='".toCharArray();
    _jsp_string3 = "\";\n  frm.target = this.name;\n  frm.submit();\n}\n\nfunction fnPrint(frm) {\n  var win = window.open('', \"winPrint\", \"toolbar=no, menubar=no, resizable=no, scrollbars=yes, width=800, height=700\");\n\n  if (win) {\n    frm.action = './po_print.jsp';  \n    frm.target = win.name;\n    frm.submit();\n  }\n}\n\nfunction fnDownload(file) {\n  with (document.form2) {\n    attachFile.value = file;\n    attachRealFile.value = file;\n    action = '/common/download.jsp';\n    target = 'hiddenFrm';\n    submit();\n  }\n}\n\n".toCharArray();
    _jsp_string47 = "</span> (".toCharArray();
    _jsp_string65 = "</td>\n  <td class='table_header'>INSPECT DATE</td>\n  <td class='table_list' colspan='2'>".toCharArray();
    _jsp_string46 = "\n    <td><span ".toCharArray();
    _jsp_string34 = "</td>\n  <td colspan='2'>".toCharArray();
    _jsp_string27 = "'>\n<input type='hidden' name='ag_supplier' value='".toCharArray();
    _jsp_string50 = "\n  </tr>\n".toCharArray();
    _jsp_string28 = "'>\n<input type='hidden' name='ag_apess_only' value='".toCharArray();
    _jsp_string2 = "\n<html>\n<head>\n<title></title>\n<link href='style_detail.css' rel='stylesheet' type='text/css'>\n<script language=JavaScript>\nfunction fnBack(frm) {\n  frm.action = \"".toCharArray();
    _jsp_string64 = "\n<tr>\n  <td class='table_header'>INSPECTOR</td>\n  <td class='table_list'>".toCharArray();
    _jsp_string26 = "'>\n<input type='hidden' name='ag_style_no' value='".toCharArray();
    _jsp_string69 = "</td>\n</tr>\n</table>\n<table width='100%' border='0' cellspacing='0' cellpadding='0'>\n<tr>\n  <td width='100%' height='10'></td>\n</tr>\n</table>\n<table width='650' border='1' bordercolor='black' cellspacing='0' cellpadding='2' align='center'>\n<tr class='table_header'>\n  <td width='34%' colspan='2'>COLOUR</td>\n  <td width='8%' rowspan='2'>RATIO</td>\n  <td width='42%' colspan='6'>SIZE</td>\n  <td width='16%' colspan='2'>QTY</td>\n</tr>\n<tr class='table_header'>\n  <td width='17%'>SP COLOUR</td>\n  <td width='17%'>COLOUR</td>\n  ".toCharArray();
    _jsp_string66 = "\n<tr>\n  <td class='table_header'>SPEC SHEET</td>\n  <td colspan='4' class='table_list'>".toCharArray();
    _jsp_string15 = "'>\n<input type='hidden' name='M' value='".toCharArray();
    _jsp_string75 = "\n    <input type=button value=\"Back\" onclick=\"fnBack(this.form)\">\n  </td>\n</tr>\n</form>\n<form name='form2' method='post'>\n<input type='hidden' name='attachPath' value='".toCharArray();
    _jsp_string61 = "\n  <td class='table_header'>MR</td>\n  <td class='table_list_center'>".toCharArray();
    _jsp_string68 = "</td>\n  <td colspan='4' class='table_list_no_height' valign='top'>".toCharArray();
    _jsp_string33 = "</td>\n  <td>".toCharArray();
    _jsp_string1 = "\n\n\n".toCharArray();
    _jsp_string4 = "\n  function fnUpdate(frm) {\n    var fmt = /^\\d+\\.\\d{2}$/;\n    var min_price = ".toCharArray();
    _jsp_string67 = "&nbsp;</td>\n</tr>\n<tr>\n  <td class='table_list_no_height' align='center'>".toCharArray();
    _jsp_string72 = "\n    <br>* Ex-factory date : 1 week before ship date\n".toCharArray();
    _jsp_string54 = "\n<tr class='table_header'>\n  <td>BUYER</td>\n  <td>SUPPLIER ITEM</td>\n  <td>SEASON</td>\n  <td>ORDER TYPE</td>\n  <td>TRANS. TYPE</td>\n</tr>\n<tr class='table_list_center'>\n  <td>".toCharArray();
    _jsp_string9 = "\n<body\n  ".toCharArray();
    _jsp_string40 = "</td>\n    <td>".toCharArray();
    _jsp_string59 = "\n  <td class='table_header'>RRP</td>\n  <td class='table_list_center'>AU$ ".toCharArray();
    _jsp_string32 = "'>\n<tr class='table_header'>\n  <td width='20%'>PO NO</td>\n  <td width='20%'>BRAND</td>\n  <td width='20%'>STYLE(GROUP) NO</td>\n  <td width='40%' colspan='2'>SUPPLIER</td>\n</tr>\n<tr class='table_list_center'>\n  <td>".toCharArray();
    _jsp_string25 = "'>\n<input type='hidden' name='ag_po_no' value='".toCharArray();
    _jsp_string57 = "</td>\n</tr>\n<tr>\n  <td class='table_header'>FABRIC</td>\n  <td colspan='".toCharArray();
    _jsp_string44 = "' size='6' maxlength='6' ".toCharArray();
    _jsp_string35 = "</td>\n</tr>\n".toCharArray();
    _jsp_string8 = "\n<style type=\"text/css\" media=\"print\">\nBODY {display:none;visibility:hidden;}\n</style>\n".toCharArray();
    _jsp_string14 = "\n<table width='650' border='1' bordercolor='black' cellspacing='0' cellpadding='0' align='center'>\n<form name='frmMain' method='post'>\n<input type='hidden' name='fromUrl' value='".toCharArray();
    _jsp_string29 = "'>\n<input type='hidden' name='ag_from_date' value='".toCharArray();
    _jsp_string42 = ")</td>\n".toCharArray();
    _jsp_string37 = "\n    <td width='20%'>EX-D/C PRICE</td>\n".toCharArray();
    _jsp_string52 = ")</td>\n    <td>".toCharArray();
    _jsp_string74 = "<input type=button value=\"PO Print\" onclick=\"fnPrint(this.form)\">".toCharArray();
    _jsp_string51 = "\n  <tr class='table_header'>\n    <td>ITEM CLASS</td>\n    <td>ITEM GROUP</td>\n    <td>UNIT PRICE</td>\n    <td width='20%'>DISCOUNT PRICE</td>\n    <td width='20%'>&nbsp;</td>\n  </tr>\n  <tr class='table_list_center'>\n    <td>".toCharArray();
    _jsp_string22 = "'>\n<input type='hidden' name='ag_month' value='".toCharArray();
    _jsp_string43 = "\n    <td><input type='text' name='ex_factory_price' value='".toCharArray();
    _jsp_string0 = "\n\n\n\n\n".toCharArray();
    _jsp_string20 = "'>\n<input type='hidden' name='ag_invoice_no' value='".toCharArray();
    _jsp_string24 = "'>\n<input type='hidden' name='ag_status' value='".toCharArray();
    _jsp_string18 = "'>\n<input type='hidden' name='ag_buyer' value='".toCharArray();
    _jsp_string6 = ";\n    \n    if (!fmt.test(frm.ex_factory_price.value)) {\n      alert('Invalid EX-FACTORY PRICE value. Only 999.00 format is allowed.');\n      frm.ex_factory_price.select();\n      return;\n    }\n\n    var price = parseFloat(frm.ex_factory_price.value);\n    \n    if (price < min_price || price > max_price) {\n      alert('Invalid EX-FACTORY PRICE value. The price should be from ' + min_price.toFixed(2) + ' to ' + max_price.toFixed(2) + '.');\n      frm.ex_factory_price.select();\n      return;\n    }\n\n    if (confirm('Do you want to update the EX-FACTORY PRICE?')) {\n      frm.action = './po_detail_save.jsp';\n      frm.submit();\n    }\n  }\n".toCharArray();
    _jsp_string39 = "\n  </tr>\n  <tr class='table_list_center'>\n    <td>".toCharArray();
    _jsp_string70 = "\n  <td width='8%'>PACK</td>\n  <td width='8%'>TOTAL</td>\n</tr>\n".toCharArray();
    _jsp_string30 = "'>\n<input type='hidden' name='ag_to_date' value='".toCharArray();
    _jsp_string53 = "</td>\n    <td>&nbsp;</td>\n  </tr>\n".toCharArray();
    _jsp_string62 = "&nbsp;</td>\n".toCharArray();
    _jsp_string60 = "\n</tr>\n<tr>\n  <td class='table_header'>RECEIPT TEXT</td>\n  <td colspan='".toCharArray();
    _jsp_string71 = "\n</table>\n<table width='650' border='0' cellspacing='0' cellpadding='0' align='center'>\n<tr>\n  <td width='100%' class='font_small_1'>* Delivery Date : Date of arrival in Sydney Distribution Centre\n".toCharArray();
    _jsp_string49 = "</td>\n".toCharArray();
    _jsp_string56 = "</td>\n  <td>AU$ ".toCharArray();
    _jsp_string10 = "\n  leftmargin='0' topmargin='0' marginwidth='0' marginheight='0'>\n<table width=\"840\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr><td>\n\n<table width=\"99%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\n<tr>\n  <td width=\"100%\" height=\"15\" colspan=\"2\"></td>\n</tr>\n<tr>\n  <td width=\"3%\"><img src=\"/img/title_icon.gif\"></td>\n  <td width=\"*\" class=\"left_title\">".toCharArray();
    _jsp_string12 = "</td>\n</tr>\n<tr>\n  <td width=\"100%\" height=\"2\" colspan=\"2\"><hr width=\"100%\"></td>\n</tr>\n<tr>\n  <td width=\"100%\" height=\"10\" colspan=\"2\"></td>\n</tr>\n</table>\n\n".toCharArray();
    _jsp_string77 = "\n</td></tr></table>\n<iframe name='hiddenFrm' src='' width='0' height='0' frameborder='0'></iframe>\n</body>\n</html>\n".toCharArray();
    _jsp_string21 = "'>\n<input type='hidden' name='ag_orderby' value='".toCharArray();
  }
}
