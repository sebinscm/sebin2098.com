/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._order;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.net.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import dbconn.*;
import common.util.*;

public class _qc_0report_0excel__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, "/order/../error.jsp", session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("application/vnd.ms-excel");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0);
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1

String scmid = "";
String scmnm = "";
String usertype = "";
String usergroup = "";
String scmsubids = "";
String _adminid = "";
String _adminname = "";
String _admingroup = "";
String _apessid = "";
String _apessname = "";

try{
  scmid = (String) session.getAttribute("scmid");
  _adminid = (String) session.getAttribute("adminid");

  if( (scmid == null || scmid.length() == 0 || scmid.equals("null"))
      && (_adminid == null || _adminid.length() == 0 || _adminid.equals("null")) ) {
    response.sendRedirect("/login_first.html");
    return;
  }

  _adminname = (String) session.getAttribute("adminname");

  _apessid = (String) session.getAttribute("apessid");
  _apessname = (String) session.getAttribute("apessname");

  scmnm = (String) session.getAttribute("scmnm");

  usertype = (String) session.getAttribute("usertype");
  if (usertype == null) usertype = "";

  usergroup = (String) session.getAttribute("usergroup");
  if (usergroup == null) usergroup = "";

  scmsubids = (String) session.getAttribute("scmsubids");
  //session.setMaxInactiveInterval(60*60);

}catch( Exception e ) {
  response.sendRedirect("/login_first.html");
  return;
}

      out.write('\n');
      
// Intranet DB
String _mysqlJdbcDriver = "com.mysql.jdbc.Driver";
String _urlLogin = "jdbc:mysql://10.2.1.247:3306/intranet";
String _userLogin = "intranet";
String _pwLogin = "tetris82";

// Futura DB
String _mssqlJdbcDriver = "com.microsoft.jdbc.sqlserver.SQLServerDriver";
String _urlFutura = "jdbc:microsoft:sqlserver://10.2.1.228:1433";
String _userFutura = "intranet";
String _pwFutura = "tetris";

// Uplod
String _uploadPath = "/var/tmp";
long _maxFileSize = 10*1024*1024;

// style image path
String _styleImgURL = "/image";

// Fault return invoice File URL
String _faultReturnInvoiceFileURL = "/image/Return";

// Memo \u00b0\u00fc\u00b7\u00c3 \u00ba\u00af\u00bc\u00f6
String _memoDataUrl = "/memo/upload";

// APESS SCM ID
String _apessID = "60171";

// Spec Sheet path
String _specSheetUrl = "/image/SPEC_SHEET";

// Spec Sheet upload path
String _specSheetUploadUrl = "/scan_spec_sheet";

// Sample Image Url
String _sampleIamgeUrl = "/image/SAMPLE_IMAGE";

// barcode file Image Url
String _barcodeFileUrl = "/image/Barcode";

// Invoice file path
String _invoiceFileUrl = "/order/inv_files";

// shipment file path
String _shipmentFileUrl = "/order/shipment_upload";

// Apess MU rate
double _MURate = 0.25;

// Ex-Factory Price Rate
double _EXRate = 0.04;


// Ex-Factory Price Rate for Apess2
double _EXRate2 = 0.04;

// Pronto DATA_AREA
//String _dataArea = "fft";
String _dataArea = "ffl";

// Pronto PIE Info
//String _pieIP = "10.2.1.226";
String _pieIP = "newffbpro.fastfuturebrands.com.au";
int _piePort = 7000;
//String _pieDataset = "apitest";
String _pieDataset = "apilive";

      out.write('\n');
      
response.setHeader("Content-Disposition", "attachment; filename=QC_Roster.xls;");
response.setHeader("Content-Description", "JSP Generated Data");

Connection connPronto = null;
dbconn.DBConnManager dbPool = null;
dbconn.MatrixDataSet matrix = null;
dbconn.DataProcess dataProcess = null;
String sql = "";
int iRet = 0;
String outS = "";

if (_adminid != null) scmid = "60171";

String ag_from_date = request.getParameter("ag_from_date");
String ag_to_date = request.getParameter("ag_to_date");
String ag_brand = request.getParameter("ag_brand");

if (ag_from_date == null || ag_to_date == null) {
  ag_from_date = "01/" + DateUtil.getToday("MM/yyyy");
  ag_to_date = DateUtil.getToday("dd/MM/yyyy");
}
if (ag_brand == null) ag_brand = "";

sql = " select  to_char(c.xpoa_ts_created+10/24, 'dd/mm/yyyy'), "
    + "         a.po_order_no, "
    + "         b.xspo_style, "
    + "         f.shm_description, "
    + "         to_char(a.po_order_date, 'dd/mm/yyyy'), "
    + "         to_char(b.ex_factory_date, 'iyyy')||to_char(b.ex_factory_date, 'iw'), "
    + "         to_char(b.ex_factory_date, 'dd/mm/yyyy'), "
    + "         to_char(a.po_arrival_date, 'dd/mm/yyyy'), "
    + "         b.xspo_trans_type, "
    + "         nvl(g.sys_description, a.po_user_name), "
    + "         to_char(d.xpoa_ts_created+10/24, 'dd/mm/yyyy'), "
    + "         e.cr_shortname, "
    + "         h.inspector, "
    + "         i.name, "
    + "         to_char(h.inspect_date, 'dd/mm/yyyy'), "
    + "         case "
    + "           when j.final_decision = 1 then 'P' "
    + "           when j.final_decision = 2 then 'H' "
    + "           when j.final_decision in (3,4,5,6,7) then 'F' "
    + "           else '' "
    + "         end "
    + " from    por5mf4 a "
    + "         inner join xstpu22 b "
    + "           on a.po_order_no = b.xspo_po_order_no "
    + "           and a.backorder_flag = b.backorder_flag "
    + "         left outer join xpoaudt0 c "
    + "           on a.po_order_no = c.xpoa_po_order_no "
    + "           and a.backorder_flag = c.backorder_flag "
    + "           and c.xpoa_change_type = 'STAT' "
    + "           and c.xpoa_status = '00' "
    + "           and c.xpoa_old_value = '00' "
    + "           and c.xpoa_new_value = '25' "
    + "         left outer join xpoaudt0 d "
    + "           on a.po_order_no = d.xpoa_po_order_no "
    + "           and a.backorder_flag = d.backorder_flag "
    + "           and d.xpoa_change_type = 'STAT' "
    + "           and d.xpoa_status = '25' "
    + "           and d.xpoa_old_value = '25' "
    + "           and d.xpoa_new_value = '40' "
    + "         left outer join cre5mfi e "
    + "           on a.cre_accountcode = e.cre_accountcode "
    + "         left outer join "
    + "         ( "
    + "           select z.stock_group, y.shm_description "
    + "           from   stkhierachymst0 y "
    + "                  inner join stkhiertree3 z "
    + "                    on y.shm_code = z.sht_category "
    + "                    and y.shm_type = 3 "
    + "         ) f "
    + "           on b.xspo_stock_group = f.stock_group "
    + "         left outer join sys5tbl5 g "
    + "           on a.po_user_name = g.sys_tbl_code "
    + "           and g.sys_tbl_type = 'RR' "
    + "         left outer join po_style_etc@scm h "
    + "           on a.po_order_no = h.po_no "
    + "         left outer join vg_inspector@scm i "
    + "           on h.inspector = i.code "
    + "         left outer join buying.vg_qc_master@aps j "
    + "           on b.xspo_po_order_no = j.po_no "
    + "           and b.xspo_style = ltrim(j.style_no, '0') "
    + " where   a.backorder_flag = ' ' "
    + " and     ( a.cre_accountcode = '" + scmid + "' "
    + "           or a.cre_accountcode in (select subid from login_02t@scm where id = '" + scmid + "') ) "
    + " and     e.cr_shortname not like 'APESS3%' "
    + " and     a.po_order_status between '40' and '90' "
    + " and     b.ex_factory_date between to_date('" + ag_from_date + "', 'dd/mm/yyyy') and to_date('" + ag_to_date + "', 'dd/mm/yyyy') ";

if (!ag_brand.equals("")) {
  if (ag_brand.equals("1")) {
    sql += " and     b.xspo_stock_group between '1000' and '2ZZZ' ";
  }
  else if (ag_brand.equals("2")) {
    sql += " and     b.xspo_stock_group between '3000' and '4ZZZ' ";
  }
}

sql += "  order by f.shm_description desc, e.cr_shortname, b.ex_factory_date, a.po_order_no ";
//out.println(sql);

try {

  dbPool = DBConnManager.getInstance();
  connPronto = dbPool.getConnection("pronto");
  matrix = new dbconn.MatrixDataSet();
  dataProcess = new dbconn.DataProcess();
  
  // read po list
  iRet = dataProcess.RetrieveData(sql, matrix, connPronto);
  connPronto.commit();

} catch (Exception e) {
  if (connPronto != null) {
    try { connPronto.rollback(); } catch (Exception ex) {}
  }

  System.out.println("Exception in qc_report_excel : " + e.getMessage());
  throw e;
} finally {
  if (connPronto != null) {
    dataProcess = new DataProcess();
    dataProcess.ManipulateData("alter session close database link aps", connPronto);
    dbPool.freeConnection("pronto", connPronto);
  }
}

// print po list
int tmpSupplierCnt = 0;
String tmpSupplier = "";
String color_code = "#FFFFF0";
String comment ="";

// read first supplier
if (iRet > 0) {
  tmpSupplier = matrix.getRowData(0).getData(11);
  
  for (int i = 0; i < iRet; i++) {
    int j = 0;
    String pr_date   = matrix.getRowData(i).getData(j++);
    String po_no     = matrix.getRowData(i).getData(j++);
    String style_no  = matrix.getRowData(i).getData(j++);
    String brand_nm  = matrix.getRowData(i).getData(j++);
    String order_date = matrix.getRowData(i).getData(j++);
    String ex_factory_week = matrix.getRowData(i).getData(j++);
    String ex_factory_date = matrix.getRowData(i).getData(j++);
    String delivery  = matrix.getRowData(i).getData(j++);
    String trans_type = matrix.getRowData(i).getData(j++);
    String buyer     = matrix.getRowData(i).getData(j++);
    String sc_date   = matrix.getRowData(i).getData(j++);
    String supplier  = matrix.getRowData(i).getData(j++);
    String inspector = matrix.getRowData(i).getData(j++);
    String inspector_nm = matrix.getRowData(i).getData(j++);
    String inspect_date = matrix.getRowData(i).getData(j++);
    String inspect_status = matrix.getRowData(i).getData(j++);

    // print item count of each suppliers
    if (!tmpSupplier.equals(supplier)) {
      outS += "<tr align=center>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td><b>" + tmpSupplierCnt + "</b></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td align='left'><b>" + tmpSupplier + "</b></td>" +
              "<td></td>" +
              "<td></td>" +
              "<td></td>" +
              "</tr>" ;
  
      tmpSupplierCnt = 0;
      tmpSupplier = supplier;
    }
  
    tmpSupplierCnt++;
  
    outS += "<tr align=center>" +
            "<td nowrap> " + pr_date + " </td>" +
            "<td nowrap> " + sc_date + " </td>" +
            "<td>" + po_no + "</td>" +
            "<td> " + style_no + "</td>" +
            "<td> " + brand_nm + " </td>" +
            "<td nowrap> " + order_date + " </td>" +
            "<td> " + ex_factory_week + " </td>" +
            "<td nowrap> " + ex_factory_date + " </td>" +
            "<td nowrap> " + delivery + " </td>" +
            "<td> " + trans_type + " </td>" +
            "<td align='left'> " + buyer + " </td>" +
            "<td align='left'> " + supplier + " </td>" +
            "<td align='left' nowrap>" + inspector + (inspector_nm.equals("") ? "" : "-") + inspector_nm + "</td>" +
            "<td nowrap> " + inspect_date + " </td>" +
            "<td> " + inspect_status + " </td>" +
            "</tr>" ;
  }

  // for last line
  outS += "<tr align=center>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td><b>" + tmpSupplierCnt + "</b></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td align='left'><b>" + tmpSupplier + "</b></td>" +
          "<td></td>" +
          "<td></td>" +
          "<td></td>" +
          "</tr>" ;
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.print(( outS ));
      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("order/qc_report_excel.jsp"), 5862277382940225995L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("login_check.jsp"), -1755892913547665674L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("common/CommonVars.jsp"), 5055347195946766837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\n<HTML>\n<HEAD>\n</HEAD>\n<body>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<TR align='center'>\n  <TD>PR Date</TD>\n  <TD>SC Date</TD>\n  <TD>PO No.</TD>\n  <TD>Item No.</TD>\n  <TD>Brand</TD>\n  <TD>PO Date</TD>\n  <TD>Ship.Week</TD>\n  <TD>Ship.Date</TD>\n  <TD>Delivery</TD>\n  <TD>Trans.Type</TD>\n  <TD>Buyer</TD>\n  <TD>Supplier</TD>\n  <TD>Inspector</TD>\n  <TD>Inspect Date</TD>\n  <TD>FI P/F</TD>\n</TR>\n".toCharArray();
    _jsp_string2 = "\n</table>\n</BODY>\n</HTML>\n".toCharArray();
    _jsp_string0 = "\n\n\n\n\n\n\n\n".toCharArray();
  }
}
